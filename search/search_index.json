{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"Home","text":"<p>This is just a placeholder file for the webpage re-direct. All the content for this section is actually in the <code>introduction.md</code> file.</p>"},{"location":"hardware_assembly/","title":"Hardware Assembly","text":""},{"location":"hardware_assembly/#usb-programming-uart1","title":"USB Programming (<code>UART1</code>)","text":"<p>The USB connection can be utilized for serial communication and configuring the LG580P GNSS module. Users only need to connect their Quad-band GNSS RTK breakout board to a computer, using a USB-C cable.</p> <p></p> <p>The Quad-band GNSS RTK breakout board with USB-C cable being attached.</p>"},{"location":"hardware_assembly/#gnss-antenna","title":"GNSS Antenna","text":"<p>In order to receive GNSS signals, users will need to connect a compatible antenna. For the best performance, we recommend users choose an active, multi-band GNSS antenna and utilize a low-loss cable.</p> Antenna Specifications <ul> <li>Passive antennas are not recommended for the LG580P GNSS module.</li> <li>To mitigate the impact of out-of-band signals, utilize an active antenna whose SAW filter is placed in front of the LNA in the internal framework.<ul> <li>DO NOT select and antenna with the LNA placed in the front.</li> </ul> </li> <li>There is no need to inject an external DC voltage into the SMA connector for the GNSS antenna. Power is already provided from the LG580P module for the LNA of an active antenna.</li> </ul>"},{"location":"hardware_assembly/#primary-antenna","title":"Primary Antenna","text":"<p>The <code>Antenna-1</code> SMA connector functions as the primary GNSS antenna connection for the LG580P GNSS receiver. The GNSS antenna on this connection will also function as the reference position for any heading computations.</p> <p></p> <p>A GNSS antenna attached to the SMA connector on the Quad-band GNSS RTK breakout board.</p>"},{"location":"hardware_assembly/#secondary-antenna","title":"Secondary Antenna","text":"<p>The <code>Antenna-2</code> SMA connector is only utilized for attitude determination by the LG580P GNSS receiver. With a minimum distance of 1m between the antennas and the base length setting configured, users should be able to achieve a heading accuracy of 0.1\u00b0.</p> <p></p> <p>Two GNSS antennas attached to the SMA connectors on the Quad-band GNSS RTK breakout board.</p>"},{"location":"hardware_assembly/#jst-connector-uart3","title":"JST Connector (<code>UART3</code>)","text":"<p>The JST connector on the Quad-band GNSS RTK board, breaks out the <code>UART3</code> port of the LG580P GNSS module. In certain circumstances, users may need to utilize the JST connector to transmit or receive RTK correction data with one of our radios.</p> <p></p> <p>The Telemetry Radio v3 connected to the Quad-band GNSS RTK breakout.</p> <p>When connecting the Quad-band GNSS RTK breakout board to other products, users should be aware of the pin connections between the devices. The table below, details the pin connections of the locking JST connector on the Quad-band GNSS RTK breakout board.</p> Pin Number 1 (Left Side) 2 3 4 Label VCC TX3 RX3 GND Function Voltage Output     - Default: 3.3V     - 3.3V or 5V  <code>UART3</code> - Receive <code>UART3</code> - Transmit Ground"},{"location":"hardware_assembly/#radio-transceivers","title":"Radio Transceivers","text":"<p>We have designed the locking JST connector to be plug-n-play with the following devices and cables. However, for the SiK Telemetry Radio v3, users should modify the <code>VSEL</code> jumper (1) on the back of the board to enable a 5V output on the <code>VCC</code> pin. Below, is a table summarizing the pin connections of the radios.</p> <ol> <li>While the SiK Telemetry Radio v3 may function with a 3.3V input, their specifications stipulate that a 5V power supply be provided.</li> </ol> Pin Number 1 (Left Side) 2 3 4 5 6 (Right) Label 5V      RX - SiK     RXI - LoRaSerial       TX - SiK     TXO - LoRaSerial  CTS RTS GND Function Voltage Input     - SiK: 5V     - LoRaSerial: 3.3 to 5V  UART - Receive UART - Transmit      Flow Control Clear-to-Send      Flow Control Ready-to-Send Ground Radio Pin Connections <p>As documented in the LoRaSerial product manual, the pin connections between a host system (i.e. Quad-band GNSS RTK breakout board) and the LoRaSerial radio is outlined in the image below.</p> <p> The pin connections between a radio and the Quad-band GNSS RTK breakout board. </p> <p>However, the flow control pins (<code>CTS</code> and <code>RTS</code>) are not available on the Quad-band GNSS RTK breakout board. Therefore, when connecting either of the radios, the pin connections should follow the table below:</p> <p> Board RX TX GND Radio TX RX GND </p> Radio Transceivers and Cables <p>Default Baud Rate</p> <p>The baud rate for these radios are configured by the <code>SERIAL_SPEED</code> parameter. The default configuration is <code>SERIAL_SPEED</code>: 57600bps.</p> <ul> <li> <p> <p>SiK Telemetry Radio V3 - 915MHz, 100mW WRL-19032</p> <li> <p> <p>SparkFun LoRaSerial Kit - 915MHz (Enclosed) WRL-20029</p> <li> <p> <p>JST-GHR-04V to JST-GHR-06V Cable - 1.25mm pitch CAB-17239</p> <li> <p> <p>GHR-04V-S to GHR-06V-S Cable - 100mm CAB-17854</p>"},{"location":"hardware_assembly/#breakout-pins","title":"Breakout Pins","text":"<p>The PTH pins on the Quad-band GNSS RTK board are broken out into 0.1\"-spaced pins on the outer edges of the board.</p> New to soldering? <p>If you have never soldered before or need a quick refresher, check out our How to Solder: Through-Hole Soldering guide.</p> <ul> <li> <p> <p>How to Solder: Through-Hole Soldering</p> <p>Headers</p> <p>When selecting headers, be sure you are aware of the functionality you require.</p> <p></p> <p>Soldering headers to the Quad-band GNSS RTK breakout board.</p> <p>Hookup Wires</p> <p>For a more permanent connection, users can solder wires directly to the board.</p> <p></p> <p>Soldering wires to the Quad-band GNSS RTK breakout board.</p>"},{"location":"hardware_assembly/#bluesmirf-header-uart2","title":"BlueSMiRF Header (<code>UART2</code>)","text":"<p>The BlueSMiRF header pins on the Quad-band GNSS RTK board, breaks out the <code>UART2</code> port of the LG580P GNSS module. This pin layout is perfect for connecting a serial-to-UART adapter or a transceiver for serial data, such as the BlueSMiRF Bluetooth\u2122 serial-link.</p> <p></p> <p>Soldering male header pins to the Quad-band GNSS RTK breakout board.</p> <p></p> <p>Soldering female header pins to the Quad-band GNSS RTK breakout board.</p> <p></p> <p>Soldering female header pins to the back of the Quad-band GNSS RTK breakout board.</p> Jumper Access <p>When soldering a header to the back of the board, be aware that you'll loose access to the jumper in that area.</p> <p> Female header covering the <code>BT-VCC</code> jumper. </p> BlueSMiRFUART AdapterOpenLog <p>Default Baud Rate</p> <p>The baud rate for the BlueSMiRF transceiver is configured by the <code>SerialSpeed</code> parameter. The default configuration is <code>SerialSpeed</code>: 115200bps.</p> <p>Connecting a BlueSMiRF transceiver to a female header that was soldered to the Quad-band GNSS RTK breakout board. This will allow users to pair their board with a mobile device; and log PNT data on the mobile device and/or connect the LG580P to an NTRIP server for RTK corrections (through mobile device's cellular or WiFi connection).</p> <p> Female header pins soldered to the top of the board. </p> <p> Female header pins soldered to the back of the board. </p> <p>Connecting a UART adapter (Serial Basic) to a male header that was soldered to the Quad-band GNSS RTK breakout board. This will allow users to configure the LG580P, when the USB connection is unavailable.</p> <p> The adapter connected to the Quad-band GNSS RTK breakout board. </p> <p>Default Baud Rate</p> <p>The baud rate for OpenLog needs to be configured in the <code>config.txt</code> file.</p> <p>Connecting an OpenLog to the Quad-band GNSS RTK breakout board. This will allow users to automatically log PNT data from the LG580P.</p> <p> An OpenLog connected to the Quad-band GNSS RTK breakout board. </p>"},{"location":"hardware_overview/","title":"Hardware Overview","text":""},{"location":"hardware_overview/#design-files","title":"Design Files","text":"<p>The SparkFun LG580P Quad-band GNSS RTK breakout board's dimensions, pin layout, and connectors are similar to our very popular SparkFun GPS-RTK-SMA Breakout - ZED-F9P (Qwiic) and SparkFun Quadband GNSS RTK Breakout - LG290P (Qwiic) boards, featuring a compact design and convenient Qwiic connectors.</p> <p>Drop-in Replacement</p> <p>Depending on your appication, this board could potentially function as a drop-in replacement. However, we advise users to verify the pin compatibility of this board with their current installation.</p> <ul> <li> <p>KiCad primary logo Design Files</p> <ul> <li> Schematic</li> <li> KiCad Files</li> <li> STEP File</li> <li> Board Dimensions:<ul> <li>1.70\" x 1.80\" (43.2mm x 45.7mm)</li> <li>Four mounting holes:<ul> <li>4-40 screw compatible</li> </ul> </li> </ul> </li> </ul> </li> <li> 3D ModelDimensions <p> <p>Download the <code>*.step</code> File</p> Manipulate 3D Model Controls Mouse Touchscreen Zoom Scroll Wheel 2-Finger Pinch Rotate Left-Click &amp; Drag 1-Finger Drag Move/Translate Right-Click &amp; Drag 2-Finger Drag <p> Dimensions of the LG580P GNSS breakout board. </p> Need more measurements? <p>For more information about the board's dimensions, users can download the KiCad files for this board. These files can be opened in KiCad and additional measurements can be made with the measuring tool.</p> <p> KiCad - Free Download!</p> <p>KiCad is free, open-source CAD program for electronics. Click on the button below to download their software. (*Users can find out more information about KiCad from their website.)</p> <p> Download KiCad primary logo </p>  Measuring Tool <p>This video demonstrates how to utilize the dimensions tool in KiCad, to include additional measurements:</p> <p> </p>"},{"location":"hardware_overview/#board-layout","title":"Board Layout","text":"<p>The SparkFun LG580P Quad-band GNSS RTK breakout board features the following:</p> <p></p> <p>Layout of the major components on the breakout board.</p> <ol> <li> USB-C Connector The primary inteface for powering and interacting with the board </li> <li> LG580P GNSS Module The Quectel LG580P GNSS module </li> <li> Header Pins Exposes pins to power the board and breaks out the interfaces of the LG580P GNSS module </li> <li> BlueSMiRF Header Pins Exposes the <code>UART2</code> port of the LG580P GNSS module </li> <li> JST Connector Exposes the <code>UART3</code> port of the LG580P GNSS module </li> <li> Qwiic Connectors Exposes the I<sup>2</sup>C interface of the LG580P GNSS module </li> <li> Status LEDs LED status indicators for the LG580P GNSS module </li> <li> <code>Antenna L1/2/5/6</code> RF Connectors SMA connectors for an external GNSS antennas </li> <li> Backup Battery Backup power to maintain ephemeris data on the LG580P GNSS module for warm starts </li> </ol>"},{"location":"hardware_overview/#usb-c-connector","title":"USB-C Connector","text":"<p>The USB connector is provided to power and communicate with the LG580P GNSS receiver. For most users, it will be the primary method for interfacing with the LG580P.</p> <p></p> <p>USB-C connector on the Quad-band GNSS RTK breakout board.</p>"},{"location":"hardware_overview/#ch342-converter","title":"CH342 Converter","text":"<p>The CH342 serial-to-USB converter allows users to interface with the <code>UART1</code> port of the LG580P GNSS module through the USB-C connector. Although the CH342 provides a dual-channel UART interface, only a single channel is utilized to communicate with the LG580P GNSS module. To utilize the CH342, users may need to install a USB driver, which can be downloaded from the manufacturer website.</p> <p>Once the USB driver is installed:</p> <ul> <li>Two virtual <code>COM</code> ports will be emulated, which can be used as standard <code>COM</code> ports to access the receiver.</li> <li>Users should select UART port with the enumeration labeled as <code>Channel A</code>.</li> </ul> USB Drivers <ul> <li> <p> Windows</p> <p> Download Page for <code>CH343SER.EXE</code></p> </li> <li> <p> MacOS</p> <p> Download Page for <code>CH341SER_MAC.ZIP</code></p> </li> </ul> <p>Linux</p> <p>A USB driver is not required for Linux based operating systems.</p>"},{"location":"hardware_overview/#power","title":"Power","text":"<p>The Quad-band GNSS RTK breakout board only requires 3.3V to power the board's primary components. The simplest method to power the board is through the USB-C connector. Alternatively, the board can also be powered through the other connectors and PTH pins.</p> <p></p> <p>Quad-band GNSS RTK breakout board's power connections.</p> <p>Below, is a general summary of the power circuitry for the board:</p> <ul> <li><code>5V</code> - The voltage from the USB-C connector, usually 5V.<ul> <li>Can be utilized as the primary power source for the entire board.</li> </ul> </li> <li><code>3V3</code> - 3.3V power rail, which powers the LG580P GNSS module, backup battery, and the power LED.<ul> <li>Power can also be distributed to/from any of the <code>3V3</code> PTH pins or JST connectors (Qwiic or <code>UART3</code>).<ul> <li>For power that is supplied through these connections, the LG580P requires a supply voltage of 3.0\u20133.6V.</li> </ul> </li> <li>A regulated 3.3V is supplied by the RT9080, when powered from the <code>5V</code> PTH pin or USB connector<ul> <li>Input Voltage Range: 1.2 to 5.5V (1)</li> <li>The RT9080 LDO regulator can source up to 600mA.</li> </ul> </li> </ul> </li> <li><code>3V3_EN</code> - Controls the power output from the RT9080 voltage regulator.<ul> <li>By default, the pin is pulled-up to 5V and to enable the RT9080 output voltage.</li> </ul> </li> <li><code>RST</code> - Used to reset the LG580P GNSS module<ul> <li>Connected to the <code>RESET_N</code> pin of the LG580P module, a system pin with an internal pull-up resistor.</li> <li>Driving the pin <code>LOW</code> for at least 100ms and releasing it, triggers a hard reset.</li> </ul> </li> <li><code>GND</code> - The common ground or the 0V reference for the voltage supplies.</li> <li>Backup Battery - Provides backup power to the GNSS module to maintain ephemeris data</li> </ul> <ol> <li>While the RT9080 LDO regulator has an input voltage range of 1.2 - 5.5V, a minimum supply voltage of 3.5V is recommended for a 3.3V output.</li> </ol> <p>JST Connector</p> <p>The <code>VCC</code> pin of the JST connector is designed to operate as a voltage output. However, an input voltage can be supplied through the pin, but users should be mindful of any voltage contention issues.</p> <p>Additionally, the <code>VSEL</code> jumper can be modified to change to output voltage level of the <code>VCC</code> pin.</p> <p>BlueSMiRF Header</p> <p>The <code>3V3</code> pin of the BlueSMiRF header is designed to operate as a voltage output. However, an input voltage can be supplied through the pin, but users should be mindful of any voltage contention issues.</p> <p>Additionally, the <code>BT-VCC</code> jumper can be modified to change to output voltage level of the <code>3V3</code> pin.</p> <p>Info</p> <p>For more details, users can reference the schematic and the datasheets of the individual components on the board.</p>"},{"location":"hardware_overview/#power-modes","title":"Power Modes","text":"Acquisition: Module searches for satellites and to determine visible satellites, coarse frequency, and the code phase of satellite signals Tracking: Once acquisition is completed, the module tracks satellites and demodulates the navigation data from specific satellites Backup Mode: Reduces power consumption. Only backup domain is active and keeps track of time."},{"location":"hardware_overview/#power-consumption","title":"Power Consumption","text":"<p>The power consumption of the LG580P GNSS module depends on the GNSS signals enabled and the positioning mode.</p> <p>Current Consumption:</p> <ul> <li>Acquisition: 98mA (323.4mW)</li> <li>Tracking: 116mA (382.8mW)</li> <li>Backup Mode: 18\u03bcA (59.4\u03bcW)</li> </ul>"},{"location":"hardware_overview/#backup-battery","title":"Backup Battery","text":"<p>While charged, the backup battery allows the GNSS module to maintain valid ephemeris data (time and GNSS orbital trajectories) that was stored. Otherwise, the GNSS module must restart acquiring and tracking satellites.</p> <p>Time to First Fix:</p> <ul> <li>Cold Start: 28s</li> <li>Warm Start: 28s</li> <li>Hot Start: 1.8s</li> </ul>"},{"location":"hardware_overview/#lg580p-gnss","title":"LG580P GNSS","text":"<p>The centerpiece of the Quad-band GNSS RTK breakout board, is the LG580P GNSS module from Quectel. The LG580P is a low-power, multi-band, multi-constellation GNSS receiver capable of delivering centimeter-level precision at high update rates. The built-in professional-grade interference signal detection and elimination algorithms, effectively mitigate multiple narrow-band interference sources and significantly improve signal reception performance in complex electromagnetic environments. In addition, the RTK and heading algorithms ensure reliable positioning in challenging scenarios such as urban environments and deep tree cover. With its performance advantages of high-precision and power consumption, this board is an ideal choice for high-precision navigation applications, such as intelligent robots, UAVs, precision agriculture, mining, surveying, and autonomous navigation.</p> <p></p> <p>The LG580P module on the Quad-band GNSS RTK breakout board.</p> <p></p> General Features <ul> <li>Supply Voltage: 3.0\u20133.6V</li> <li>Tracking Channels: 1040</li> <li>Concurrent signal reception: 5 + QZSS<ul> <li><code>L1</code>, <code>L2</code>, <code>L5</code>, <code>E6</code> frequency bands</li> </ul> </li> <li>Sensitivity:<ul> <li>Acquisition: -145dBm</li> <li>Tracking: -160dBm</li> <li>Reacquisition: -155dBm</li> </ul> </li> <li>Antenna Power: External</li> <li>GNSS Constellations and SBAS Systems:<ul> <li>USA: GPS + WASS</li> <li>Russia: GLONASS + SDCM</li> <li>EU: Galileo + EGNOS</li> <li>China: BDS + BDSDAS</li> <li>Japan: QZSS + MSAS</li> <li>India: NavIC + GAGAN</li> <li>Korea: KASS</li> <li>Africa: ASECNA</li> <li>Auz/NZ: SouthPAN</li> </ul> </li> <li>Accuracy of 1PPS Signal: 5ns</li> <li>Update Rate:<ul> <li>Default: 10Hz</li> <li>Max: 20Hz</li> </ul> </li> </ul> <ul> <li>Time to First Fix (without AGNSS):<ul> <li>Cold Start: 28s</li> <li>Warm Start: 28s</li> <li>Hot Start: 1.8s</li> </ul> </li> <li>RTK Convergence Time: 5s</li> <li>Dynamic Performance:<ul> <li>Maximum Altitude: 10000m</li> <li>Maximum Velocity: 490m/s</li> <li>Maximum Acceleration: 4g</li> </ul> </li> <li>Interfaces<ul> <li>UART (x3)<ul> <li>Baud Rate: 9600\u20133000000bps<ul> <li>Default: 460800bps</li> </ul> </li> <li>Protocol: <code>NMEA 0183</code>/<code>RTCM 3.x</code>/<code>QGC</code></li> </ul> </li> <li>SPI<sup>2</sup> (x1)</li> <li>I<sup>2</sup>C<sup>2</sup> (x1)</li> <li>CAN<sup>2</sup> (x1)</li> </ul> </li> <li>Operating temperature: -40\u00b0C to +85\u00b0C</li> <li>Footprint: 21mm \u00d7 16mm \u00d7 2.7mm</li> <li>Weight: 1.4g</li> </ul>"},{"location":"hardware_overview/#frequency-bands","title":"Frequency Bands","text":"<p>The LG580P modules are multi-band, multi-constellation GNSS receivers. Below, is a chart illustrating the frequency bands utilized by all the global navigation satellite systems; along with a list of the frequency bands and GNSS systems supported by the LG580P GNSS module.</p> <p></p> <p>Frequency bands of the global navigation satellite systems. (Source: Tallysman)</p> <p>Supported Frequency Bands:</p> <ul> <li>GPS: <code>L1 C/A</code>, <code>L5</code>, <code>L2C</code></li> <li>GLONASS: <code>L1</code>, <code>L2</code></li> <li>Galileo: <code>E1</code>, <code>E5a</code>, <code>E5b</code>, <code>E6</code></li> <li>BDS: <code>B1I</code>, <code>B1C</code>, <code>B2a</code>, <code>B2b</code>, <code>B2I</code>, <code>B3I</code></li> <li>QZSS: <code>L1 C/A</code>, <code>L5</code>, <code>L2C</code>, <code>L6</code></li> <li>NavIC: <code>L5</code></li> <li>SBAS: <code>L1</code></li> <li>L-band PPP<sup>1</sup>:<ul> <li>PPP: <code>B2b</code></li> <li>QZSS: <code>L6</code></li> <li>Galileo HAS: <code>E6</code></li> </ul> </li> </ul> <p>Supported GNSS Constellations:</p> <ul> <li>GPS (USA)</li> <li>GLONASS (Russia)</li> <li>Galileo (EU)</li> <li>BDS (China)</li> <li>QZSS (Japan)</li> <li>NavIC (India)</li> </ul> <p>Supported SBAS Systems:</p> <ul> <li>WASS (USA)</li> <li>SDCM (Russia)</li> <li>EGNOS (EU)</li> <li>BDSBAS (China)</li> <li>MSAS (Japan)</li> <li>GAGAN (India)</li> <li>KASS (Korea)</li> <li>ASECNA (Africa)</li> <li>SouthPAN (Aus/NZ)</li> </ul> <p>Info</p> <p>For a comparison of the frequency bands supported by the LG580P GNSS modules, refer to sections 1.2, 1.5, and 1.6 of the hardware design manual.</p> What are Frequency Bands? <p>A frequency band is a section of the electromagnetic spectrum, usually denoted by the range of its upper and lower limits. In the radio spectrum, these frequency bands are usually regulated by region, often through a government entity. This regulation prevents the interference of RF communication; and often includes major penalties for any interference with critical infrastructure systems and emergency services.</p> <p> Frequency bands of the global navigation satellite systems. (Source: ESA) </p> <p>However, if the various GNSS constellations share similar frequency bands, then how do they avoid interfering with one another? Without going too far into detail, the image above helps illustrate some of the characteristics, specific to the frequency bands of each system. With these characteristics in mind, along with other factors, the chart can help users to visualize how multiple GNSS constellations might co-exist with each other.</p> <p>For more information, users may find these articles of interest:</p> <ul> <li>GNSS signal</li> <li>GPS Signal Plan</li> <li>GLONASS Signal Plan</li> <li>GALILEO Signal Plan</li> </ul>"},{"location":"hardware_overview/#gnss-accuracy","title":"GNSS Accuracy","text":"<p>The accuracy of the position reported from the LG580P GNSS module, can be improved based upon the correction method being employed. Currently, RTK corrections provide the highest level of accuracy; however, users should be aware of certain limitations of the system:</p> <ul> <li>RTK technique requires real-time correction data from a reference station or network of base stations.<ul> <li>RTK corrections usually come from RTCM messages that are signal specific (i.e. an RTK network may only provide corrections for specific signals; only <code>E5b</code> and not <code>E5a</code>).</li> </ul> </li> <li>The range of the base stations will vary based upon the method used to transmit the correction data.</li> <li>The reliability of RTK corrections are inherently reduced in multipath environments.</li> </ul> Correction Method Horizontal Vertical Heading Velocity Standalone 1.0m~3.3' 1.5m~4.9' 3cm/s (0.108kph)~1.2in/s (0.067mph) RTK 0.8cm (+1ppm)~0.3\" 1.5cm (+1ppm)~0.6\" 0.1\u00b0 RTK Corrections <p>To understand how RTK works, users will need a more fundamental understanding of the signal error sources.</p> <ul> <li> <p> <p>Real-Time Kinematics Explained</p> <li> <p> <p>What is Correction Data?</p>"},{"location":"hardware_overview/#gnss-heading","title":"GNSS Heading","text":"<p>In most traditional GNSS navigation systems, such as those used on your phone or car, previous navigation points were utilized to determine the course over ground. This is the reason why the pointer will often be oriented in the wrong direction when the navigation system first boots up or spins after the system has been stationary for an extended period of time.</p> <p>However, with the LG580 GNSS module, users can get an immediate heading reading without relying on previous course data points, which is great for autonomous driving and precision agriculture navigation because .</p> <p>Velocity Heading Velocity heading works by deriving heading from the direction of velocity and acceleration by successive GNSS measurements. It works well with wheeled or rail-mounted vehicles that do not move sideways under most conditions, and for whom heading is primarily used for navigating on the move without long periods of GNSS interference. Velocity heading requires a GNSS position fix and a horizontal vehicle velocity of at least 1.15 m/s. The heading accuracy is hence dependent on the quality of the GNSS signals and the speed at which the vehicle is moving.</p> <p>Velocity heading does not work well with helicopters, boats, or other vehicles that move sideways (sideslip), because the algorithm will then estimate vehicle course over the ground rather than the vehicle heading. It is also ineffective for stationary applications, such as targeting or tracking the heading of slowly moving objects.</p> <p>Velocity heading is very effective for cars, rail and wheeled vehicles that move over 1.15 m/s for a reasonable proportion of their operation. It is generally better to use a different heading source for helicopters, boats, planes or drones.</p> <p>Magnetic Heading Magnetic heading uses three magnetometers to measure the strength of the Earth\u2019s magnetic field, providing an absolute 3D orientation.</p> <p>Magnetometers are susceptible to interference from nearby ferrous objects, magnets, and devices that generate electromagnetic fields.</p> <p>Magnetic heading is able to provide heading under most operating conditions but at considerably lower accuracy when compared to dual-antenna heading. This makes it a preferred method for cost-constrained systems or where GNSS reception is poor.</p> <p>Gyrocompass Heading Gyroscopes are very accurate, but their accuracy is dependent on latitude; the closer to the equator, the higher the heading accuracy, as the relative movement is greater at the equator. Another method for determining headings is to measure the rotation of the Earth in space, a process often known as north-seeking or gyro heading. Using sophisticated 3-dimensional mathematics, the direction of the true north can be determined by taking gyroscope measurements over a period of time. The earth rotates at the rate of 360 degrees every 24 hours (0.25 degrees per minute), and therefore an extremely sensitive gyroscope is required to reliably distinguish this.</p> <p>Gyrocompasses / Fiber Optic Gyroscopes are sensitive to movement, shock, and vibration and can require some procedure and time to initialize which makes them unsuitable for some vehicles and applications. They can, however, determine heading without any external reference which proves gyrocompass heading a strong choice for GNSS denied environments with generally low levels of shock and vibration.</p> <p>Heading</p> <p>The heading accuracy is derived from baseline length of 1m between the antennas.</p> <p>Info</p> <p>This heading angle is derived using dual antenna orientation, and it is different from the heading angle output in RMC messages.</p>"},{"location":"hardware_overview/#peripherals-and-io-pins","title":"Peripherals and I/O Pins","text":"<p>The LG580P GNSS features several peripheral interfaces and I/O pins. Some of these are broken out as pins on the Quad-band GNSS RTK breakout board; whereas, others are broken out to their specific interface (i.e. USB connector, JST connector, etc.). Additionally, some of their connections are tied to other components on the board.</p> <p></p> <p>The I/O pins on the Quad-band GNSS RTK breakout board.</p> <p>Interfaces:</p> <ul> <li>UART (x3)</li> <li>SPI<sup>2</sup></li> <li>I<sup>2</sup>C<sup>2</sup></li> <li>CAN<sup>2</sup></li> <li>Event Trigger<sup>3</sup></li> <li>PPS Signal</li> <li>RTK Signal</li> <li>Module Reset</li> </ul> UARTsI<sup>2</sup>CSPIPPS OutputRTKEventReset <p>The LG580P GNSS has three UART ports, which can be operated and configured separately.</p> <p> The UART ports on the Quad-band GNSS RTK breakout board. </p> Pin Connections <p>When connecting to the UART pins to another device, the signals should be connected based upon the flow of their data.</p> <p> Board RX TX GND UART Device TX RX GND </p> <p>UART Settings</p> <p>The UART ports have the following configuration settings:</p> <ul> <li>Logic Level: 3.3V</li> <li>Baudrate: 9600bps, 115200bps, 230400bps, 460800bps, 921600bps, and 3000000bps </li> <li>Data Bits: 8</li> <li>Parity: No</li> <li>Stop Bits: 1</li> <li>Flow Control: N/A</li> <li>Supported Protocols:<ul> <li><code>NMEA 0183</code> (<code>PQTM</code>)</li> <li><code>RTCM 3.x</code></li> <li><code>QGC</code></li> </ul> </li> </ul> Additional Support <p>All of the UART ports support firmware updates through their interface. In addition, the <code>UART1</code> port also supports debugging data and the <code>UART3</code> interface can be multiplexed for the CAN bus interface<sup>2</sup>.</p> <code>UART1</code><code>UART2</code><code>UART3</code> <p><code>UART1</code> can only be accessed from the USB-C connector, through the CH342 serial-to-USB converter. For Windows and MacOS computers, a USB driver must be installed in order to communicate with the LG580P module through the CH342 converter; however for Linux operating systems, the standard Linux CDC-ACM driver is suitable. Once the USB driver has been installed:</p> <ul> <li>Two virtual <code>COM</code> ports are emulated, which can be used as standard <code>COM</code> ports to access the receiver.</li> <li>Users should select <code>COM</code> port with the lower enumeration or listed as <code>Channel A</code>.</li> </ul> <p><code>UART2</code> is available through the breakout PTH pins or the BlueSMiRF header pins. The pin layout of the BlueSMiRF header is pin compatible with many of our serial devices (i.e. UART adapters, serial data loggers, BlueSMiRF transceivers).</p> <p><code>UART3</code> is available through the JST connector. The pin layout of the 4-pin locking JST-GH connector is compatible with many of our serial radios and adapter cables.</p> UART Protocols <p>While not implemented yet, the I<sup>2</sup>C interface is available through the breakout PTH pins or the Qwiic connectors.</p> <p> The I<sup>2</sup>C interface on the Quad-band GNSS RTK breakout board. </p> <p>I<sup>2</sup>C Settings</p> <p>By default, the UART ports are configured with the following settings:</p> <ul> <li>Logic Level: 3.3V</li> <li>I<sup>2</sup>C Address: N/A</li> <li>Bitrate: up to 400kbps</li> <li>Protocols:<ul> <li><code>NMEA</code></li> <li><code>PQTM</code></li> <li><code>RTCM</code></li> </ul> </li> <li>Built-in 2.2k\u03a9 pull-up resistors</li> </ul> <p>While not implemented yet, the SPI interface is available through the breakout PTH pins.</p> <p> The SPI interface on the Quad-band GNSS RTK breakout board. </p> <p>SPI Settings</p> <p>By default, the UART ports are configured with the following settings:</p> <ul> <li>Logic Level: 3.3V</li> <li>Baudrate: 1Mbps \u2013 3Mbps</li> <li>Protocols:<ul> <li><code>NMEA</code></li> <li><code>PQTM</code></li> <li>Firmware updates</li> </ul> </li> </ul> <p><code>SRDY</code> Pin</p> <p>The <code>SDRY</code> pin functions as the interrupt output for the SPI interface. By default, the pin is <code>LOW</code>.</p> <p>From the module, the PPS output signal is a 3.3V signal output that can be accessed from the <code>PPS</code> PTH pin. The signal is also connected to the <code>PPS</code> LED, which can be used as a visual indicator for its operation.</p> <p> The timing signal's outputs on the Quad-band GNSS RTK breakout board. </p> Jumpers <p>See the Jumpers section for more details.</p> <ul> <li>There is a jumper attached to the <code>PPS</code> LED. For low power applications, the jumper can be cut to disable the <code>PPS</code> LED.</li> </ul> <p>Use Case</p> <ul> <li>Users could use this signal in conjunction with the event pins to synchronize two modules with each other.</li> <li>Users could use this signal to create their own Stratum 0 source for the NTP on a primary time server.</li> </ul> <p>The <code>RTK</code> PTH pin operates as both the <code>RTK_STAT</code> status indicator for the RTK positioning. The pin is also connected to the <code>RTK</code> LED, which can be used as a visual indicator for its operation.</p> <p> The RTK signal's outputs on the Quad-band GNSS RTK breakout board. </p> <p>Info</p> <p>In this configuration, the pin is set to a high level at startup. The <code>RTK_STAT</code> pin is used to indicate RTK status. The pin is at high level during startup.</p> <ol> <li>If the pin output is high, it indicates the module has entered the RTK fixed mode.</li> <li>If the pin output is low, it indicates that the module exited the RTK fixed mode or is in Backup mode.</li> <li>If the pin outputs an alternating pin level, it indicates that the module received the correct RTCM data and did not enter the RTK fixed mode. The default frequency is 10Hz.</li> </ol> Jumpers <p>See the Jumpers section for more details.</p> <ul> <li>There is a jumper attached to the <code>RTK</code> LED. For low power applications, the jumper can be cut to disable the <code>RTK</code> LED.</li> </ul> <p>The <code>EVENT</code> pin provides event inputs with adjustable input frequentness and polarity.</p> <p> The <code>EVENT</code> pin on the Quad-band GNSS RTK breakout board. </p> <p>Use Case</p> <p>Users could use this pin in conjunction with the PPS signal to synchronize two modules with each other.</p> <p>The <code>RST</code> pin can be used to reset the LG580P module if it enters an abnormal state. To reset the GNSS module, the pin must be low for more than 100ms.</p> <p> The <code>RST</code> pin on the Quad-band GNSS RTK breakout board. </p>"},{"location":"hardware_overview/#uart-protocols","title":"UART Protocols","text":"<p>By default, these UART ports are configured to transmit and receive <code>NMEA 0183</code>, <code>RTCM 3.x</code>, and/or <code>QGC</code> messages. These messages are generally used for transmitting PNT data; providing or receiving RTK corrections; and receiving PPP data, respectively. Quectel also implements a system of proprietary messages (<code>PQTM</code>) for users to configure the LG580P that follows a data format similar to the <code>NMEA</code> protocol. The expected structure of these proprietary messages is shown below:</p> <p> The data structure of Quectel messages for the <code>NMEA</code> and <code>PQTM</code> protocols. </p> <p> The data structure of Quectel messages for the <code>QGC</code> protocol. </p> NMEAPQTMQGCRTCM <p>A full list of compatible <code>NMEA 0183</code> v4.11 messages, is provided in section 2.2. Standard Messages of the GNSS Protocol Specification manual. This protocol is used for outputting GNSS data, as detailed by the National Marine Electronics Association organization.</p> List of Standard NMEA Messages Message Type Mode Message Description RMC Output Recommended Minimum Specific GNSS Data GGA Output Global Positioning System Fix Data GSV Output GNSS Satellites in View GSA Output GNSS DOP and Active Satellites VTG Output Course Over Ground &amp; Ground Speed GLL Output Geographic Position \u2013 Latitude/Longitude GBS Output GNSS Satellite Fault Detection GNS Output GNSS Fix Data GST Output GNSS Pseudorange Error Statistics ZDA Output UTC Time &amp; Date HDT Output True Vessel Heading THS Output True, Heading, and Status <p>A full list of PQTM messages (proprietary NMEA messages defined by Quectel) supported by LG580P, is provided in section 2.3. PQTM Messages of the GNSS Protocol Specification manual. This protocol is used to configure or read the settings for the LG580P GNSS module.</p> List of Proprietary Quectel Messages Message Type Mode Message Description PQTMVER Output Outputs the firmware version PQTMCOLD Command Performs a cold start PQTMWARM Command Performs a warm start PQTMHOT Command Performs a hot start PQTMSRR Command Performs a system reset and reboots the receiver PQTMUNIQID Command Queries the module unique ID PQTMSAVEPAR Command Saves the configurations into NVM PQTMRESTOREPAR Command Restores the parameters configured by all commands to their default values PQTMVERNO Command Queries the firmware version PQTMCFGUART Set/Get Sets/gets the UART interface PQTMCFGPPS Set/Get Sets/gets the PPS feature PQTMCFGPROT Set/Get Sets/gets the input and output protocol for a specified port PQTMCFGNMEADP Set/Get Sets/gets the decimal places of standard NMEA messages PQTMEPE Output Outputs the estimated position error PQTMCFGMSGRATE Set/Get Sets/gets the message output rate on the current interface PQTMVEL Output Outputs the velocity information PQTMCFGGEOFENCE Set/Get Sets/gets geofence feature PQTMGEOFENCESTATUS Output Outputs the geofence status PQTMGNSSSTART Command Starts GNSS engine PQTMGNSSSTOP Command Stops GNSS engine PQTMTXT Output Outputs short text messages PQTMCFGSVIN Set/Get Sets/gets the Survey-in feature PQTMSVINSTATUS Output Outputs the Survey-in status PQTMPVT Output Outputs the PVT (GNSS only) result PQTMCFGRCVRMODE Set/Get Sets/gets the receiver working mode PQTMDEBUGON Command Enables debug log output PQTMDEBUGOFF Command Disables debug log output PQTMCFGFIXRATE Set/Get Sets/gets the fix interval PQTMCFGRTK Set/Get Sets/gets the RTK mode PQTMCFGCNST Set/Get Sets/gets the constellation configuration PQTMDOP Output Outputs dilution of precision PQTMPL Output Outputs protection level information PQTMCFGODO Set/Get Sets/gets the odometer feature PQTMRESETODO Command Resets the accumulated distance recorded by the odometer PQTMODO Output Outputs the odometer information PQTMCFGSIGNAL Set/Get Sets/gets GNSS signal mask PQTMCFGSAT Set/Get Sets/gets GNSS satellite mask PQTMCFGRSID Set/Get Sets/gets the reference station ID PQTMCFGRTCM Set/Get Sets/gets RTCM PQTMCFGSBAS Set/Get Configures SBAS PQTMCFGNMEATID Set/Get Configures the NMEA Talker ID PQTMTAR Output Outputs the time and attitude PQTMCFGBLD Set/Get Configures the baseline distance PQTMCFGRTKSRCTYPE Set/Get Configures RTK differential source type PQTMSN Command Reads the SN of module PQTMCFGANTINF Set/Get Configures the antenna information PQTMCFGANTDELTA Set/Get Configures the delta between antennas PQTMCFGSIGGRP Set/Get Configures the GNSS signal group PQTMCFGSIGNAL2 Set/Get Configures GNSS signal mask for second antenna PQTMCFGGEOSEP Set/Get Configures geoidal separation PQTMCFGCNRTHD Set/Get Configures the CNR threshold for position engine PQTMCFGELETHD Set/Get Configures the elevation threshold for position engine PQTMNAV Output Outputs the navigation information PQTMEOE Output Outputs the end of epoch information PQTMCFGWN Set/Get Configures the reference start week number PQTMANTENNASTATUS Output Reports the antenna status <p>A full list of QGC messages (proprietary protocol defined by Quectel) supported by LG580P, is provided in section 3. QGC Protocol of the GNSS Protocol Specification manual. This protocol is used to output the PPP raw data.</p> List of Proprietary Quectel Messages GQC Message Name Message Group Message Number Type Description RAW-PPPB2B 0x0A 0xB2 Output BDS PPPB2B binary raw messages RAW-QZSSL6 0x0A 0xB6 Output QZSSL6 binary raw messages RAW-HASE6 0x0A 0xE6 Output Galileo HASE6 binary raw messages <p>A full list of compatible <code>RTCM v3</code> messages, is provided in section 4. RTCM Protocol of the GNSS Protocol Specification manual. This protocol is used for transferring GNSS raw measurement data, as detailed by the Radio Technical Commission for Maritime Services organization.</p> List of Supported RTCMv3 (MSM) Messages Message Type Mode Message Description 1005 Input/Output Stationary RTK Reference Station ARP 1006 Input/Output Stationary RTK Reference Station ARP with height 1019 Input/Output GPS Ephemerides 1020 Input/Output GLONASS Ephemerides 1041 Input/Output NavIC/IRNSS Ephemerides 1042 Input/Output BDS Satellite Ephemeris Data 1044 Input/Output QZSS Ephemerides 1046 Input/Output Galileo I/NAV Satellite Ephemeris Data 1073 Input/Output GPS MSM3 1074 Input/Output GPS MSM4 1075 Input/Output GPS MSM5 1076 Input/Output GPS MSM6 1077 Input/Output GPS MSM7 1083 Input/Output GLONASS MSM3 1084 Input/Output GLONASS MSM4 1085 Input/Output GLONASS MSM5 1086 Input/Output GLONASS MSM6 1087 Input/Output GLONASS MSM7 1093 Input/Output Galileo MSM3 1094 Input/Output Galileo MSM4 1095 Input/Output Galileo MSM5 1096 Input/Output Galileo MSM6 1097 Input/Output Galileo MSM7 1113 Input/Output QZSS MSM3 1114 Input/Output QZSS MSM4 1115 Input/Output QZSS MSM5 1116 Input/Output QZSS MSM6 1117 Input/Output QZSS MSM7 1123 Input/Output BDS MSM3 1124 Input/Output BDS MSM4 1125 Input/Output BDS MSM5 1126 Input/Output BDS MSM6 1127 Input/Output BDS MSM7 1133 Input/Output NavIC/IRNSS MSM3 1134 Input/Output NavIC/IRNSS MSM4 1135 Input/Output NavIC/IRNSS MSM5 1136 Input/Output NavIC/IRNSS MSM6 1137 Input/Output NavIC/IRNSS MSM7"},{"location":"hardware_overview/#sma-connectors","title":"SMA Connectors","text":"<p>There are two SMA connectors on the Quad-band GNSS RTK breakout board. The <code>Antenna-1</code> connector is the primary input for a GNSS antenna for the LG580P GNSS receiver. The <code>Antenna-2</code> connector operates as a secondary GNSS antenna input to provide a heading and pitch solution from the LG580P GNSS receiver.</p> <p></p> <p>The SMA connectors for an external GNSS antennas on the Quad-band GNSS RTK breakout board.</p> <p>Antenna Specifications</p> <ul> <li>Passive antennas are not recommended for the LG580P GNSS module.</li> <li>To mitigate the impact of out-of-band signals, utilize an active antenna whose SAW filter is placed in front of the LNA in the internal framework.<ul> <li>DO NOT select and antenna with the LNA placed in the front.</li> </ul> </li> <li>There is no need to inject an external DC voltage into the SMA connector for the GNSS antenna. Power is already provided from the LG580P module for the LNA of an active antenna.</li> </ul>"},{"location":"hardware_overview/#jst-connector","title":"JST Connector","text":"<p>The Quad-band GNSS RTK breakout features a 4-pin JST GH connector, which is polarized and locking. Users can access pins of the <code>UART3</code> port with our breadboard cable. Otherwise, the connector's pin layout is compatible with any of our serial radios and adapter cables.</p> <p></p> <p>The JST connector on the Quad-band GNSS RTK breakout board.</p> Pin Connections Jumpers <p>By default, the <code>VSEL</code> jumper is connected to <code>3V3</code> pad for a regulated 3.3V output on the 4-pin JST-GH connector.</p>"},{"location":"hardware_overview/#pin-connections","title":"Pin Connections","text":"<p>When connecting the Quad-band GNSS RTK breakout board to other products, users need to be aware of the pin connections between the devices.</p> <p> Pin Number 1 (Left Side) 2 3 4 Label VCC TX3 RX3 GND Function Voltage Output     - Default: 3.3V     - Selectable: 3.3V or 5V  <code>UART3</code> - Receive <code>UART3</code> - Transmit Ground </p> <p>When connecting the Quad-band GNSS RTK breakout board to our radios, the pin connections should follow the table below. If the flow control is not enabled, the only the <code>RX</code>, <code>TX</code>, and <code>GND</code> pins are utilized.</p> <p> Board RX TX GND Radio TX RX GND </p> <p>As documented in the LoRaSerial product manual, the pin connections between a host system (i.e. Quad-band GNSS RTK breakout board) and the LoRaSerial Kit radio is outlined in the image below.</p> <p> The <code>COM</code> ports on the Quad-band GNSS RTK breakout board. </p>"},{"location":"hardware_overview/#bluesmirf-header","title":"BlueSMiRF Header","text":"<p>The Quad-band GNSS RTK breakout features a 6-pin BlueSMiRF PTH header for <code>UART2</code>. The pin layout of which, is compatible with many of our serial devices (i.e. UART adapters, serial data loggers, BlueSMiRF transceivers).</p> <p></p> <p>The 6-pin BlueSMiRF PTH header on the Quad-band GNSS RTK breakout board.</p> Jumpers <p>By default, the <code>BT_VCC</code> jumper provides a regulated 3.3V output to the BlueSMiRF header.</p>"},{"location":"hardware_overview/#status-leds","title":"Status LEDs","text":"<p>There are four status LEDs on the Quad-band GNSS RTK breakout board:</p> <p></p> <p>The status LED indicators on the Quad-band GNSS RTK breakout board.</p> <ul> <li><code>PWR</code> - Power (Red)<ul> <li>Turns on once 3.3V power is supplied to the board</li> </ul> </li> <li><code>PPS</code> - Pulse-Per-Second Signal (Yellow)<ul> <li>Indicates when there is a pulse-per-second signal (see the PPS Output section)</li> </ul> </li> <li><code>PVT</code> - Position-Velocity-Time Solution (Blue)<ul> <li>On: Indicates the module has entered PVT mode</li> <li>Off: Indicates that the module has exited PVT mode or is in Backup mode.</li> </ul> </li> <li><code>RTK</code> - Real-Time Kinematic Mode (White)<ul> <li>Indicates when an RTK fix has been established or when the correct RTCM data is being received (see the RTK section)</li> </ul> </li> <li><code>HEAD</code> - Heading Solution (Green)<ul> <li>On: Indicates the module has entered Heading fixed mode</li> <li>Off: Indicates that the module has exited Heading fixed mode or is in Backup mode.</li> </ul> </li> </ul> <p>Info</p> <ul> <li>The <code>PPS</code> LED is also connected to the <code>PPS</code> pin.</li> <li>The <code>RTK</code> LED is also connected to the <code>RTK</code> pin.</li> </ul> Jumpers <p>There are jumper attached to the LEDs. For low power applications, these jumpers can be cut to disable their respective LED. See the Jumpers section for more details.</p>"},{"location":"hardware_overview/#jumpers","title":"Jumpers","text":"Never modified a jumper before? <p>Check out our Jumper Pads and PCB Traces tutorial for a quick introduction!</p> <ul> <li> <p> <p>How to Work with Jumper Pads and PCB Traces</p> <p>There are seven jumpers on the back of the board that can be used to easily modify the hardware connections on the board. From which, there are three jumpers that control power to the status LEDs on the board. By default, all the jumpers are connected, to power the status LEDs. For low power applications, users can cut the jumpers to disconnect power from each of the LEDs.</p> <p></p> <p>The jumpers on the back of the Quad-band GNSS RTK breakout board.</p> <ul> <li><code>VSEL</code> - This jumper can be modified to configure/disconnect the <code>VCC</code> pin of the 4-pin locking JST connector to/from <code>3V3</code> or <code>5V</code> power.</li> <li><code>BT_VCC</code> - This jumper can be cut to disconnect the <code>3V3</code> BlueSMiRF header pin from the 3.3V output of the RT9080 LDO regulator.</li> <li><code>PWR</code> - This jumper can be cut to remove power from the red, power LED.</li> <li><code>PPS</code> - This jumper can be cut to remove power from the yellow <code>PPS</code> LED, indicating when there is a PPS signal.</li> <li><code>PVT</code> - This jumper can be cut to remove power from the blue <code>PVT</code> LED, indicating a PVT solution or operation in PVT mode.</li> <li><code>RTK</code> - This jumper can be cut to remove power from the white <code>RTK</code> LED, indicating RTK fix or operation in RTK mode.</li> <li><code>HEADING</code> - This jumper can be cut to remove power from the green <code>HEAD</code> LED, indicating a heading solution or operation in Heading fixed mode.</li> <li><code>SHLD</code> - This jumper can be cut to disconnect the shielding of the USB-C connector from the <code>GND</code> plane of the board</li> </ul> <p>Info</p> <ul> <li>By default, the <code>VSEL</code> jumper is connected to <code>3V3</code> pad for a regulated 3.3V output on the 4-pin JST-GH connector.</li> <li>By default, the <code>BT_VCC</code> jumper provides a regulated 3.3V output to the BlueSMiRF header.</li> </ul> <ol> <li> <p>Feature Under Development</p> <p>Corrections for some of the PPP services have not been implemented.</p> <p>\u21a9</p> </li> <li> <p>Feature Under Development</p> <p>Currently, only the UART interface is supported by the module. Support for the I<sup>2</sup>C, SPI, and CAN interfaces are still under development.</p> <p>\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>Feature Under Development</p> <p>The event trigger has not been implemented.</p> <p>\u21a9</p> </li> </ol>"},{"location":"introduction/","title":"Introduction","text":""},{"location":"introduction/#introduction","title":"Introduction","text":"<ul> <li> <p> SparkFun Quadband GNSS RTK with Heading Breakout - LG580P (Qwiic) SKU: GPS-28019 <p> </p> <p> Purchase from SparkFun  </p> <li> <p>The SparkFun Quadband GNSS RTK with Heading Breakout - LG580P (Qwiic) features the Quectel LG580P GNSS module, providing exceptional positioning and heading accuracy. The LG580P GNSS module is an upgraded version of the LG290P on our SparkFun Quadband GNSS RTK Breakout - LG290P (Qwiic); providing an additional GNSS antenna input for instantaneous heading determination down to 0.1\u00b0. In traditional navigation systems, such as those used on your phone or car, previous navigation points are utilized to determine the course heading. This is the reason why the arrow indicator will spin or be oriented in the wrong directions when the navigation system first boots or has been stationary for extended periods of time. However, with the LG580 GNSS module, users are provided with a dedicated heading without relying on previous course data points, magnetometers/compasses, or gyroscopes in IMUs, which can introduce small errors.</p> <p>The board's dimensions, pin layout, and connectors are similar to our very popular SparkFun GPS-RTK-SMA Breakout - ZED-F9P (Qwiic), featuring a compact design and convenient Qwiic connectors. (*Depending on your application, this board could potentially function as a drop-in replacement; users should verify the pin compatibility of this board with their current installation.) The board also accommodates users with a diverse choice of interfaces including UART, SPI*, I<sup>2</sup>C*, and CAN*. The board has three UART ports, which are accessible through the USB-C connector, BlueSMiRF (6-pin PTH) header, and 4-pin locking JST connector. Users can also interface with the board through the 25 PTH pins that are broken out around the edge of the board. For the GNSS antenna(s), SMA antenna connectors are provided on the edge of the board; an optional, secondary antenna can be utilized for heading determination. We also provide two 4-pin JST Qwiic connectors for future use, when the I<sup>2</sup>C feature becomes available for the GNSS module.</p> <p>The LG580P module is a quad-band, multi-constellation, high-precision, RTK and heading GNSS receiver. The module is capable of simultaneously receiving signals from the <code>L1</code>, <code>L2</code>, <code>L5</code>, and <code>L6</code>/<code>E6</code> frequency bands of the GPS, GLONASS, Galileo, BDS, QZSS, and NavIC GNSS constellations. In addition, the module supports SBAS augmentation systems (WAAS, EGNOS, BDSBAS, MSAS, GAGAN, KASS, ASECNA, SouthPAN, and SDCM), PPP services* (BDS PPP-B2b, QZSS CLAS, MADOCA-PPP, and Galileo HAS), RTCM, and RTK corrections for precision navigation with a fast convergence time and reliable performance.</p> <p>The built-in professional-grade interference signal detection and elimination algorithms, effectively mitigate multiple narrow-band interference sources and significantly improve signal reception performance in complex electromagnetic environments. In addition, the RTK and heading algorithms ensure reliable positioning in challenging scenarios such as urban environments and deep tree cover. With its high-precision, low power consumption and a high positioning and heading update rate of up to 20 Hz, this board is ideal for high-precision navigation applications, such as intelligent robots, precision agriculture, ADAS, and autonomous driving.</p> </li> <p>Features Under Development</p> <ul> <li>I<sup>2</sup>C/SPI/CAN - Currently, only the UART interface is supported by the module.</li> <li>PPP Services - Corrections for some of the PPP services have not been implemented.</li> </ul> Product Comparison Characteristics LG580P LG290P Supply Voltage: 3.0\u20133.6V 3.15\u20133.45V Acquisition Current: 98mA (323.4mW) 91mA (300.3mW) Tracking Current: 116mA (382.8mW) 91mA (300.3mW) Backup Mode Current: 18\u03bcA (59.4\u03bcmW) 12\u03bcA (39.6mW) GPS Frequency bands: <code>---</code> <code>L1C</code>* QZSS Frequency bands: <code>---</code> <code>L1C</code>* SBAS Frequency bands: <code>L1</code> <code>L1 C/A</code> Horizontal Accuracy (Autonomous): 1m 0.7m Vertical Accuracy (Autonomous): 1.5m 2.5m Heading Accuracy: 0.1\u00b0 NA TTFF (Hot Start): 1.8s 1.7s Sensitivity (Acquisition): -145dBm -146dBm Antenna Power Supply: External External or Internal UART Protocols: <code>QGC</code> <code>---</code> CAN Interface*: x1 NA Footprint: 21mm \u00d7 16mm \u00d7 2.7mm 12.2mm \u00d7 16mm \u00d7 2.6mm Weight: 1.4g ~0.9g <p>Note</p> <ul> <li><code>---</code>: Any remarks on the other module, are additional features</li> <li>NA: Feature is not available for that module</li> <li>*: Feature is still under development</li> </ul> <p>In this guide we'll cover how to setup the LG580P GNSS breakout board. To follow along with this tutorial, at a minimum, users will need the following items:</p> <ul> <li>Computer with an operating system (OS) that is compatible with all the software installation requirements</li> <li>USB 3.1 Cable A to C - 3 Foot - Used to interface with the LG580P GNSS Breakout (1)</li> <li>SparkFun Quadband GNSS RTK with Heading Breakout - LG580P (Qwiic)</li> <li>GNSS Multi-Band L1/L2/L5 Surveying Antenna<ul> <li>SMA Male to TNC Male Cable</li> <li>Antenna Mount</li> </ul> </li> </ul> <ol> <li>If your computer doesn't have a USB-A slot, then choose an appropriate cable or adapter.</li> </ol> <ul> <li> <p> <p>USB 3.1 Cable A to C - 3 Foot CAB-14743</p> <li> <p> <p>SparkFun Quadband GNSS RTK with Heading Breakout - LG580P (Qwiic) GPS-28019</p> <li> <p> <p>GNSS Multi-Band L1/L2/L5 Surveying Antenna - TNC (SPK6618H) GPS-21801</p> <li> <p> <p>Reinforced Interface Cable - SMA Male to TNC Male (10m) CAB-21740</p> <li> <p> <p>GNSS Magnetic Antenna Mount - 5/8\" 11-TPI PRT-21257</p>"},{"location":"introduction/#section-topics","title":"Section Topics","text":"<p>This guide is divided into three sections:</p> <ul> <li>The Quickstart Guide assumes a working knowledge of GNSS receiver, development boards, and the required software to program and/or configure them for your project's needs. It only covers basic hardware information and assembly instructions users would need to get started with this product.</li> <li>The Hardware section has two sub-sections that provide:<ul> <li>An overview of the board's design, major components, and interfaces. Refer to this page for information on the connectors, breakout pins, and jumpers.</li> <li>Assembly instructions for this product's interfaces.</li> </ul> </li> <li>The Software section has several sub-sections. The LG580P module has numerous capabilities and a multitude of ways to configure and interface with them.</li> <li>In the Resources and Support sections, users can find the design files (KiCad files &amp; schematic), relevant documentation (datasheets, white papers, etc.) and other helpful links on the Resources page. Lastly, the Troubleshooting Tips page includes helpful tips and instructions for how to receive technical support from SparkFun.</li> </ul>"},{"location":"pqmt_commands/","title":"PQMT Commands","text":"<p>Below, are excerpts for a few of the PQTM messages from the GNSS Protocol Specification manual. Users will find these useful for configuring their LG580P GNSS module as an RTK base station or rover.</p> Documentation <p>A full list of PQTM messages (proprietary NMEA messages defined by Quectel) supported by LG580P, is provided in section 2.3. PQTM Messages of the GNSS Protocol Specification manual. This protocol is used to configure or read the settings for the LG580P GNSS module.</p> List of Proprietary Quectel Messages Message Type Mode Message Description PQTMVER Output Outputs the firmware version PQTMCOLD Command Performs a cold start PQTMWARM Command Performs a warm start PQTMHOT Command Performs a hot start PQTMSRR Command Performs a system reset and reboots the receiver PQTMUNIQID Command Queries the module unique ID PQTMSAVEPAR Command Saves the configurations into NVM PQTMRESTOREPAR Command Restores the parameters configured by all commands to their default values PQTMVERNO Command Queries the firmware version PQTMCFGUART Set/Get Sets/gets the UART interface PQTMCFGPPS Set/Get Sets/gets the PPS feature PQTMCFGPROT Set/Get Sets/gets the input and output protocol for a specified port PQTMCFGNMEADP Set/Get Sets/gets the decimal places of standard NMEA messages PQTMEPE Output Outputs the estimated position error PQTMCFGMSGRATE Set/Get Sets/gets the message output rate on the current interface PQTMVEL Output Outputs the velocity information PQTMCFGGEOFENCE Set/Get Sets/gets geofence feature PQTMGEOFENCESTATUS Output Outputs the geofence status PQTMGNSSSTART Command Starts GNSS engine PQTMGNSSSTOP Command Stops GNSS engine PQTMTXT Output Outputs short text messages PQTMCFGSVIN Set/Get Sets/gets the Survey-in feature PQTMSVINSTATUS Output Outputs the Survey-in status PQTMPVT Output Outputs the PVT (GNSS only) result PQTMCFGRCVRMODE Set/Get Sets/gets the receiver working mode PQTMDEBUGON Command Enables debug log output PQTMDEBUGOFF Command Disables debug log output PQTMCFGFIXRATE Set/Get Sets/gets the fix interval PQTMCFGRTK Set/Get Sets/gets the RTK mode PQTMCFGCNST Set/Get Sets/gets the constellation configuration PQTMDOP Output Outputs dilution of precision PQTMPL Output Outputs protection level information PQTMCFGODO Set/Get Sets/gets the odometer feature PQTMRESETODO Command Resets the accumulated distance recorded by the odometer PQTMODO Output Outputs the odometer information PQTMCFGSIGNAL Set/Get Sets/gets GNSS signal mask PQTMCFGSAT Set/Get Sets/gets GNSS satellite mask PQTMCFGRSID Set/Get Sets/gets the reference station ID PQTMCFGRTCM Set/Get Sets/gets RTCM PQTMCFGSBAS Set/Get Configures SBAS PQTMCFGNMEATID Set/Get Configures the NMEA Talker ID PQTMTAR Output Outputs the time and attitude PQTMCFGBLD Set/Get Configures the baseline distance PQTMCFGRTKSRCTYPE Set/Get Configures RTK differential source type PQTMSN Command Reads the SN of module PQTMCFGANTINF Set/Get Configures the antenna information PQTMCFGANTDELTA Set/Get Configures the delta between antennas PQTMCFGSIGGRP Set/Get Configures the GNSS signal group PQTMCFGSIGNAL2 Set/Get Configures GNSS signal mask for second antenna PQTMCFGGEOSEP Set/Get Configures geoidal separation PQTMCFGCNRTHD Set/Get Configures the CNR threshold for position engine PQTMCFGELETHD Set/Get Configures the elevation threshold for position engine PQTMNAV Output Outputs the navigation information PQTMEOE Output Outputs the end of epoch information PQTMCFGWN Set/Get Configures the reference start week number PQTMANTENNASTATUS Output Reports the antenna status"},{"location":"pqmt_commands/#save-parametersrestore-to-default-settings","title":"Save Parameters/Restore to Default Settings","text":""},{"location":"pqmt_commands/#pqtmsavepar","title":"<code>PQTMSAVEPAR</code>","text":"<p>Saves the current configurations into NVM of the LG580P</p> <pre><code>$PQTMSAVEPAR*&lt;Checksum&gt;&lt;CR&gt;&lt;LF&gt;\n</code></pre> Example <p>Save the current settings to non-volatile memory of the LG580P. <pre><code>$PQTMSAVEPAR*5A\n</code></pre></p> <p>If there are no errors, users will receive the following response: <pre><code>$PQTMSAVEPAR,OK*72\n</code></pre></p>"},{"location":"pqmt_commands/#pqtmrestorepar","title":"<code>PQTMRESTOREPAR</code>","text":"<p>Restores the parameters configured by all commands to their default values; this command takes effect after restarting the LG580P</p> <pre><code>$PQTMRESTOREPAR*&lt;Checksum&gt;&lt;CR&gt;&lt;LF&gt;  \n</code></pre> Example <p>Restore all the settings of the LG580P to their factory defaults <pre><code>$PQTMRESTOREPAR*13\n</code></pre></p> <p>If there are no errors, users will receive the following response: <pre><code>$PQTMRESTOREPAR,OK*3B\n</code></pre></p>"},{"location":"pqmt_commands/#uart-settings","title":"UART Settings","text":""},{"location":"pqmt_commands/#pqtmcfguart","title":"<code>PQTMCFGUART</code>","text":"<p>Configures the serial protocol setting for the UART interfaces</p> <ul> <li> <p>Current UART interface:</p> <pre><code>$PQTMCFGUART,W,&lt;BaudRate&gt;[,&lt;DataBit&gt;,&lt;Parity&gt;,&lt;StopBit&gt;,&lt;FlowCtrl&gt;]*&lt;Checksum&gt;&lt;CR&gt;&lt;LF&gt;\n</code></pre> </li> <li> <p>A specific UART interface:</p> <pre><code>$PQTMCFGUART,W,&lt;Index&gt;,&lt;BaudRate&gt;[,&lt;DataBit&gt;,&lt;Parity&gt;,&lt;StopBit&gt;,&lt;FlowCtrl&gt;]*&lt;Checksum&gt;&lt;CR&gt;&lt;LF&gt;\n</code></pre> </li> </ul> <p>Parameters:</p> <p> Field <code>&lt;Index&gt;</code> <code>&lt;BaudRate&gt;</code> <code>&lt;DataBit&gt;</code> <code>&lt;Parity&gt;</code> <code>&lt;StopBit&gt;</code> <code>&lt;FlowCtrl&gt;</code> Description UART Interface <ul> <li><code>1</code> = UART1</li> <li><code>2</code> = UART2</li> <li><code>3</code> = UART3</li> </ul> Baud Rate (bps) <ul> <li><code>9600</code></li> <li><code>115200</code></li> <li><code>230400</code></li> <li><code>460800</code></li> <li><code>921600</code></li> </ul> Number of Data Bits <ul> <li><code>8</code> = 8 bits</li> </ul> Parity <ul> <li><code>0</code> = No parity</li> <li><code>1</code> = Odd parity</li> <li><code>2</code> = Even parity</li> <li><code>3</code> = Mark</li> <li><code>4</code> = Space</li> </ul> Number of Stop Bit(s) <ul> <li><code>1</code> = 1 stop bit</li> <li><code>2</code> = 2 stop bits</li> </ul> Flow Control <ul> <li><code>0</code> = None</li> </ul> </p> Baud Rate <p>For ports utilized in conjunction with either the BlueSMiRF or radio transceivers, we recommend reducing the baud rate to 115200bps or lower to avoid overflowing the buffers of the transceiver's serial port.</p> Configure the Settings <p>Example Settings</p> <ul> <li>Port: <code>UART1</code></li> <li>Baud Rate: 115200bps</li> <li>Data Bits: 8</li> <li>Parity: No</li> <li>Stop Bits: 1</li> <li>Flow Control: None</li> </ul> <p>Configure the baud rate of the current UART interface to 115200bps: <pre><code>$PQTMCFGUART,W,115200*18\n</code></pre></p> <p>Configure the baud rate of <code>UART1</code> to 115200bps: <pre><code>$PQTMCFGUART,W,1,115200*05\n</code></pre></p> <p>Configure all parameters of the current UART interface: <pre><code>$PQTMCFGUART,W,115200,8,0,1,0*11\n</code></pre></p> <p>Configure all parameters of <code>UART1</code>: <pre><code>$PQTMCFGUART,W,1,115200,8,0,1,0*0C\n</code></pre></p> <p>If there are no errors, users will receive the following response: <pre><code>$PQTMCFGUART,OK*60\n</code></pre></p> Retrieve the Settings <p>Example Settings</p> <ul> <li>Port: <code>UART1</code></li> <li>Baud Rate: 115200bps</li> <li>Data Bits: 8</li> <li>Parity: No</li> <li>Stop Bits: 1</li> <li>Flow Control: None</li> </ul> <p>Get the configuration on the current UART interface: <pre><code>$PQTMCFGUART,R*36\n</code></pre></p> <p>Get the configuration on UART1: <pre><code>$PQTMCFGUART,R,1*2B\n</code></pre></p> <p>If there are no errors, users will receive the following response: <pre><code>$PQTMCFGUART,OK,1,115200,8,0,1,0*5F\n</code></pre></p>"},{"location":"pqmt_commands/#pqtmcfgprot","title":"<code>PQTMCFGPROT</code>","text":"<p>Configures the input/output protocol on a specified port</p> <pre><code>$PQTMCFGPROT,W,&lt;PortType&gt;,&lt;PortID&gt;,&lt;InputProt&gt;,&lt;OutputProt&gt;*&lt;Checksum&gt;&lt;CR&gt;&lt;LF&gt;\n</code></pre> <p>Parameters:</p> <p> Field <code>&lt;PortType&gt;</code> <code>&lt;PortID&gt;</code> <code>&lt;InputProt&gt;</code> <code>&lt;OutputProt&gt;</code> Description Port Type <ul> <li><code>1</code> = UART</li> </ul> Port ID <ul> <li><code>1</code> = UART1</li> <li><code>2</code> = UART2</li> <li><code>3</code> = UART3</li> </ul> Input/Output Protocols (<code>HEX</code>: 32-bit) <ul> <li>Bit <code>0</code> = NMEA</li> <li>Bit <code>2</code> = RTCM3</li> </ul> The default protocols are NMEA and RTCM3: HEX: <code>00000005</code> BIN: <code>0000 0000 0000 0000 0000 0000 0000 0101</code> </p> Configure the Settings <p>Example Settings</p> <ul> <li>Port: <code>UART1</code></li> <li>Input Protocol: NMEA &amp; RTCM3</li> <li>Input Protocol: NMEA &amp; RTCM3</li> </ul> <p>Configure the configuration on UART1: <pre><code>$PQTMCFGPROT,W,1,1,00000005,00000005*38\n</code></pre></p> <p>If there are no errors, users will receive the following response: <pre><code>$PQTMCFGPROT,OK*6B\n</code></pre></p> Retrieve the Settings <p>Example Settings</p> <ul> <li>Port: <code>UART1</code></li> <li>Input Protocol: NMEA &amp; RTCM3</li> <li>Input Protocol: NMEA &amp; RTCM3</li> </ul> <p>Get the configuration on UART1: <pre><code>$PQTMCFGPROT,R,1,1*3D\n</code></pre></p> <p>If there are no errors, users will receive the following response: <pre><code>$PQTMCFGPROT,OK,1,1,00000005,00000005*6B\n</code></pre></p>"},{"location":"pqmt_commands/#rtk-settings","title":"RTK Settings","text":""},{"location":"pqmt_commands/#pqtmcfgsvin","title":"<code>PQTMCFGSVIN</code>","text":"<p>Configures a base station's position either by survey-in mode or fixed mode</p> <pre><code>$PQTMCFGSVIN,W,&lt;Mode&gt;,&lt;CFG_CNT&gt;,&lt;3D_AccLimit&gt;,&lt;ECEF_X&gt;,&lt;ECEF_Y&gt;,&lt;ECEF_Z&gt;*&lt;Checksum&gt;&lt;CR&gt;&lt;LF&gt;\n</code></pre> <p>Parameters:</p> <p> Field <code>&lt;Mode&gt;</code> <code>&lt;CFG_CNT&gt;</code> <code>&lt;3D_AccLimit&gt;</code> <code>&lt;ECEF_X&gt;</code> <code>&lt;ECEF_Y&gt;</code> <code>&lt;ECEF_Z&gt;</code> Description Receiver Mode <ul> <li><code>0</code> = Disable</li> <li><code>1</code> = Survey-in mode</li> <li><code>2</code> = Fixed mode(Position is configured in ECEF coordinates)</li> </ul> Survey-in Mode Minimum positioning time (seconds) <ul> <li>Range: <code>0</code>-<code>86400</code></li> <li>Default: <code>0</code></li> </ul> Survey-in Mode 3D positioning accuracy (meters) <ul> <li><code>0</code> = No limit</li> <li>Default: <code>0.0</code></li> </ul> Fixed Mode WGS84 ECEF X,Y,Z coordinates (meters) <ul> <li>Default: <code>0.0000</code></li> </ul> </p> RTK Base Station Modes <p>In order to operate as a base station, the LG580P GNSS module requires an accurate position of its antenna. This can be either defined in ECEF coordinates or acquired through a self-survey process.</p> <ol> <li>Survey-In Mode: The base station's location is established based on a weighted mean of recent solutions of its position. The <code>&lt;CFG_CNT&gt;</code> and <code>&lt;3D_AccLimit&gt;</code> parameters define the shortest amount of time that the position gets surveyed and the maximum standard deviation of the estimated position.</li> <li>Fixed Mode: The base station's position is provided in ECEF coordinates.</li> </ol> <p>Note</p> <p>Any error in the base station's location will translate directly into an error in the rover's position.</p> Configure the Settings <p>Example Settings</p> <ul> <li>Mode: Survey-in mode</li> <li>Survey Time: 3600 seconds</li> <li>3D Accuracy: 1.2m</li> <li>ECEF Coordinates:<ul> <li>X: -2519265.0514m</li> <li>Y: 4849534.9045m</li> <li>Z: 3277834.6432m</li> </ul> </li> </ul> <p>Configure the configuration on UART1: <pre><code>$PQTMCFGSVIN,W,1,3600,1.2,-2519265.0514,4849534.9045,3277834.6432*01\n</code></pre></p> <p>If there are no errors, users will receive the following response: <pre><code>$PQTMCFGSVIN,OK*70\n</code></pre></p> Retrieve the Settings <p>Example Settings</p> <ul> <li>Mode: Survey-in mode</li> <li>Survey Time: 3600 seconds</li> <li>3D Accuracy: 1.2m</li> <li>ECEF Coordinates:<ul> <li>X: -2519265.0514m</li> <li>Y: 4849534.9045m</li> <li>Z: 3277834.6432m</li> </ul> </li> </ul> <p>Get the configuration on UART1: <pre><code>$PQTMCFGSVIN,R*26\n</code></pre></p> <p>If there are no errors, users will receive the following response: <pre><code>$PQTMCFGSVIN,OK,1,3600,1.2,-2519265.0514,4849534.9045,3277834.6432*52\n</code></pre></p>"},{"location":"pqmt_commands/#pqtmcfgrcvrmode","title":"<code>PQTMCFGRCVRMODE</code>","text":"<p>Configures the mode that the receiver is operating in</p> <pre><code>$PQTMCFGRCVRMODE,W,&lt;Mode&gt;*&lt;Checksum&gt;&lt;CR&gt;&lt;LF&gt;\n</code></pre> <p>Parameters:</p> <p> Field <code>&lt;Mode&gt;</code> Description Operation mode <ul> <li><code>0</code> = Unknown</li> <li> <code>1</code> = Rover When set to this mode, the receiver will restore to default NMEA message output state. </li> <li><code>2</code> = Base Station When set to this mode, the receiver will automatically disable NMEA message output and enable RTCM <code>MSM4</code> and RTCMv3 <code>1005</code> message output. </li> </ul> </p> <p>Note</p> <p>After switching the module\u2018s working mode, save the configuration and then reset the module. Otherwise, it will continue to operate in the original mode.</p> Configure the Settings <p>Example Settings</p> <ul> <li>Port ID: <code>UART1</code></li> <li>Input Protocol: NMEA &amp; RTCM3</li> <li>Input Protocol: NMEA &amp; RTCM3</li> </ul> <p>Configure the configuration on UART1: <pre><code>$PQTMCFGRCVRMODE,W,2*29\n</code></pre></p> <p>If there are no errors, users will receive the following response: <pre><code>$PQTMCFGRCVRMODE,OK*64\n</code></pre></p> Retrieve the Settings <p>Example Settings</p> <ul> <li>Port ID: <code>UART1</code></li> <li>Input Protocol: NMEA &amp; RTCM3</li> <li>Input Protocol: NMEA &amp; RTCM3</li> </ul> <p>Get the configuration on UART1: <pre><code>$PQTMCFGRCVRMODE,R*32\n</code></pre></p> <p>If there are no errors, users will receive the following response: <pre><code>$PQTMCFGRCVRMODE,OK,2*7A\n</code></pre></p>"},{"location":"pqmt_commands/#pqtmcfgrtk","title":"<code>PQTMCFGRTK</code>","text":"<p>Configures the operation settings of the RTK mode</p> <pre><code>$PQTMCFGRTK,W,&lt;DiffMode&gt;,&lt;RelMode&gt;*&lt;Checksum&gt;&lt;CR&gt;&lt;LF&gt;\n</code></pre> <p>Parameters:</p> <p> Field <code>&lt;DiffMode&gt;</code> <code>&lt;RelMode&gt;</code> Description Differential Mode <ul> <li><code>0</code> = Disable RTK/RTD feature (Differential data is not used)</li> <li><code>1</code> = Auto mode</li> <li><code>2</code> = RTD only mode (Only pseudoranges is used)</li> </ul> Absolute/Relative Mode <ul> <li><code>1</code> = Absolute mode, ensure absolute position accuracy</li> <li><code>2</code> = Relative mode, ensure relative position accuracy</li> </ul> This field only takes effect when <code>&lt;DiffMode&gt;</code> = <code>1</code> and the module enters the RTK only mode.  </p> Configure the Settings <p>Example Settings</p> <ul> <li>Port ID: <code>UART1</code></li> <li>Input Protocol: NMEA &amp; RTCM3</li> <li>Input Protocol: NMEA &amp; RTCM3</li> </ul> <p>Configure the configuration on UART1: <pre><code>$PQTMCFGRTK,W,1,1*6C\n</code></pre></p> <p>If there are no errors, users will receive the following response: <pre><code>$PQTMCFGRTK,OK*3F\n</code></pre></p> Retrieve the Settings <p>Example Settings</p> <ul> <li>Port ID: <code>UART1</code></li> <li>Input Protocol: NMEA &amp; RTCM3</li> <li>Input Protocol: NMEA &amp; RTCM3</li> </ul> <p>Get the configuration on UART1: <pre><code>$PQTMCFGRTK,R*69\n</code></pre></p> <p>If there are no errors, users will receive the following response: <pre><code>$PQTMCFGRTK,OK,1,1*3F\n</code></pre></p>"},{"location":"pqmt_commands/#heading-settings","title":"Heading Settings","text":""},{"location":"pqmt_commands/#pqtmtar","title":"<code>PQTMTAR</code>","text":"<p>Outputs the time and attitude. The attitude computation in this message is computed from the two-antenna system.</p> <pre><code>$PQTMTAR,&lt;MsgVer&gt;,&lt;Time&gt;,&lt;Quality&gt;,&lt;Res&gt;,&lt;Length&gt;,&lt;Pitch&gt;,&lt;Roll&gt;,&lt;Heading&gt;,&lt;Acc_Pitch&gt;,&lt;Acc_Roll&gt;,&lt;Acc_Heading&gt;,&lt;UsedSV&gt;*&lt;Checksum&gt;&lt;CR&gt;&lt;LF&gt;\n</code></pre> <p>Parameters:</p> <p> Field Description <code>&lt;MsgVer&gt;</code> Message version. <ul> <li><code>1</code> = Version 1 (Always <code>1</code> for this message version)</li> </ul> <code>&lt;Time&gt;</code> UTC Time (<code>hhmmss.ddd</code>) <ul> <li><code>hh</code> = Hours (24hr)</li> <li><code>mm</code> = Minutes</li> <li><code>ss</code> = Seconds</li> <li><code>ddd</code> = Milliseconds</li> </ul> <code>&lt;Quality&gt;</code> GPS Heading Quality <ul> <li><code>0</code> = Fix not available or invalid</li> <li><code>1</code> = GPS SPS Mode, fix valid</li> <li><code>2</code> = Differential GPS, SPS Mode, or Satellite Based Augmentation System (SBAS), fix valid</li> <li><code>3</code> = GPS PPS Mode, fix valid</li> <li><code>4</code> = Fix Heading. System used in RTK mode with fixed integers</li> <li><code>5</code> = Float Heading. Satellite system used in RTK mode, floating integers</li> </ul> <code>&lt;Res&gt;</code> Reserved <code>&lt;Length&gt;</code> Baseline Length (meters) <code>&lt;Pitch&gt;</code> Pitch Angle (degrees) <ul> <li>Range: <code>-90.000000</code>-<code>90.000000</code></li> </ul> <code>&lt;Roll&gt;</code> Roll Angle (degrees) <ul> <li>Range: <code>-180.000000</code>-<code>180.000000</code></li> </ul> <code>&lt;Heading&gt;</code> Heading (degrees) <ul> <li>Range: <code>0.000000</code>-<code>360.000000</code></li> </ul> <code>&lt;Acc_Pitch&gt;</code> Pitch Accuracy (degrees) <code>&lt;Acc_Roll&gt;</code> Roll Accuracy (degrees) <code>&lt;Acc_Heading&gt;</code> Heading Accuracy (degrees) <code>&lt;UsedSV&gt;</code> Satellites Number used for heading solution  </p> <p>Info</p> <ul> <li>Only the LG580P supports this message</li> <li>More information for the direction of <code>&lt;Heading&gt;</code> in the <code>$PQTMTAR</code> message, please refer to the dual-antenna heading application note</li> </ul> Parsed Message <pre><code>$PQTMTAR,1,165034.000,4,,0.860,1.124780,1.254125,50.968541,0.254125,0.125485,0.012547,21*52\n</code></pre> <ul> <li>Message Version: <code>1</code></li> <li>UTC Time: 16:50 34.000s</li> <li>GPS Heading Quality: <code>4</code> - Fix Heading. System used in RTK mode with fixed integers</li> <li>Baseline Length: 0.860m</li> <li>Pitch Angle: 1.124780\u00b0</li> <li>Roll Angle: 1.254125\u00b0</li> <li>Heading: 50.968541\u00b0</li> <li>Pitch Accuracy: 0.254125\u00b0</li> <li>Roll Accuracy: 0.125485\u00b0</li> <li>Heading Accuracy: 0.012547\u00b0</li> <li>Satellites: <code>21</code></li> </ul>"},{"location":"pqmt_commands/#pqtmcfgbld","title":"<code>PQTMCFGBLD</code>","text":"<p>Configures the baseline distance between the two antennas.</p> <pre><code>$PQTMCFGBLD,W,&lt;Distance&gt;*&lt;Checksum&gt;&lt;CR&gt;&lt;LF&gt;\n</code></pre> <p>Parameters:</p> <p> Field <code>&lt;Distance&gt;</code> Description Baseline Distance (meters) <ul> <li>Range: <code>0.000</code>-<code>5.000</code></li> <li>Default: <code>0.000</code></li> </ul> When the baseline distance is <code>0</code>, the baseline distance will calculate by software  </p> <p>Info</p> <ul> <li>Only the LG580P supports this message</li> </ul> Configure the Settings <p>Example Settings</p> <ul> <li>Port ID: <code>UART1</code></li> <li>Input Protocol: NMEA &amp; RTCM3</li> <li>Input Protocol: NMEA &amp; RTCM3</li> </ul> <p>Configure the configuration on UART1: <pre><code>$PQTMCFGBLD,W,1.000*68\n</code></pre></p> <p>If there are no errors, users will receive the following response: <pre><code>$PQTMCFGBLD,OK*38\n</code></pre></p> Retrieve the Settings <p>Example Settings</p> <ul> <li>Port ID: <code>UART1</code></li> <li>Input Protocol: NMEA &amp; RTCM3</li> <li>Input Protocol: NMEA &amp; RTCM3</li> </ul> <p>Get the configuration on UART1: <pre><code>$PQTMCFGBLD,R*6E\n</code></pre></p> <p>If there are no errors, users will receive the following response: <pre><code>$PQTMCFGBLD,OK,1.000*3B\n</code></pre></p>"},{"location":"resources/","title":"Resources","text":""},{"location":"resources/#product-resources","title":"Product Resources","text":"<ul> <li>SparkFun logo Product Page</li> <li> Design Files:<ul> <li> Schematic</li> <li> Board Dimensions</li> <li> KiCad Files</li> <li> STEP File</li> </ul> </li> <li> QGNSS Software (v2.x)</li> <li>Component Documentation<ul> <li> Product Specifications</li> <li> Protocol Specification</li> <li> Hardware Design</li> <li> Firmware Upgrade Guide</li> <li> Application Note - RTK Corrections</li> <li> Application Note - Base Station</li> <li> Application Note - Heading</li> <li> CH342 Datasheet</li> <li> RT9080 Datasheet</li> <li> JST-GH Connector Specifications</li> </ul> </li> <li> Hardware Repository</li> <li> SFE Product Showcase</li> </ul>"},{"location":"resources/#sparkfun-logo-additional-resources","title":"SparkFun logo Additional Resources","text":"<ul> <li>Qwiic Information Page</li> <li> SparkFun Technical Assistance</li> </ul>"},{"location":"resources/#manufacturers-resources","title":"\ud83c\udfed\u00a0Manufacturer's Resources","text":"<p>Quectel also provides great resources for the LG580P GNSS module:</p> <ul> <li> Product Webpage</li> <li> Quectel Forum</li> <li> Technical Support</li> <li> Download Zone</li> <li> Resource Library</li> </ul>"},{"location":"rtcm_messages/","title":"Rtcm messages","text":"<p>Ntrip - Networked Transport of RTCM via Internet Protocol Ntrip stands for an application-level protocol for streaming Global Navigation Satellite System (GNSS) data over the Internet. It is a generic, stateless protocol based on the Hypertext Transfer Protocol HTTP/1.1. The HTTP objects are enhanced to GNSS data streams. Ntrip is an RTCM standard designed for disseminating differential correction data (e.g in the RTCM-104 format) or other kinds of GNSS streaming data to stationary or mobile users over the Internet, allowing simultaneous PC, Laptop, PDA, or receiver connections to a broadcasting host. It supports wireless Internet access through Mobile IP Networks like GSM, GPRS, EDGE, or UMTS.</p> <p>Ntrip is implemented in three system software components: NtripClients, NtripServers and NtripCasters. The NtripCaster is the actual HTTP server program whereas NtripClient and NtripServer are acting as HTTP clients.</p> <p>Ntrip is meant to be an open none-proprietary protocol. Major characteristics of Ntrip dissemination technique are:</p> <p>Based on the popular HTTP streaming standard; comparatively easy to implement when having limited client and server platform resources available. Application not limited to one particular plain or coded stream content; ability to distribute any kind of GNSS data. Potential to support mass usage; disseminating hundreds of streams simultaneously for up to thousand users possible when applying modified Internet Radio broadcasting software. Considering security needs; stream providers and users do not necessarily get into contact, streams often not blocked by firewalls or proxyservers protecting Local Area Networks. Enables streaming over any mobile IP network because of using TCP/IP.</p> <p>Motivation Since 1993 the RINEX Format is the standard file format for long-time storage and dissemination of GNSS receiver data, targeted mainly for the estimation of station coordinates in post-processing mode. RINEX data can be downloaded at several global and regional data centers usually as \"daily\" files containing 24 hours of data. With ongoing development and the desire for getting information immediately the demand for accessing GNSS data with very small delay (in real-time) grew. Monitoring and of course positioning are probably the main use cases where real-time data is indispensable. In order to disseminate GNSS data in real-time a new format had to be developed. RTCM messages (see RTCM Home Page) are nowadays widely used for this purpose. In addition to a format a transport protocol had to be defined, the so-called Ntrip streaming protocol, developed at BKG together with TU Dortmund. Using this protocol the data user is able to communicate with the data provider. Georg Weber, the former scientific director in the Department of Geodesy at BKG and representing BKG as a member of the RTCM Services Special Committee (SC) 104 played a decisive role in the development and promotion of real-time GNSS and Ntrip. An important reason why Ntrip has been widely accepted is that BKG provides software tools for both, the server and the client side. On the server side the BKG Ntrip Broadcaster was developed to stream GNSS data in real-time over the Internet. The BKG Ntrip Client (BNC), which is not only an Ntrip client, is the leading internationally accepted standard Ntrip client application. It's development started in 2005 mainly by Leos Mervart from TU Prague.</p> <p>Documentation The material provided here describes the Ntrip real-time GNSS data transport protocol definition and the description of an Ntrip Example Implementation. Note that the protocol definition made available here is not the official Ntrip documentation. The standards can be purchased at the RTCM shop. The Ntrip working group of RTCM SC104 provides a practical guidance to developers of Ntrip client software. The document is distributed freely at the RTCM shop. New</p> <p>Ntrip, Version 1.0 In September 2004 Ntrip Version 1.0 became an RTCM Recommended Standard, see Press Release. The Transport Protocol Definition Vers. 1.0, Status 2004-09-30 is available here.</p> <p>Ntrip, Version 2.0 In June 2009 RTCM Special Committee 104 (SC104) has completed a Version 2.0 of its Ntrip standard, see Press Release. Major changes compared to Version 1.0 are:</p> <p>Cleared and fixed design problems and HTTP protocol violations Replaced non standard directives Adds chunked transfer encoding Improves header records Provides for sourcetable filtering Provides for Real Time Streaming Protocol (RTSP) communication Note that Ntrip Version 2.0 is fully downward compatible with Ntrip Version 1.0.</p> <p>Ntrip Broadcaster Global Navigation Satellite System (GNSS) data can be broadcast in real-time over the Internet using the Ntrip dissemination technique. In this context, the purpose of so-called Ntrip Broadcasters is to split data streams coming in from GNSS Reference Stations (Sources) for many simultaneously listening Clients. Ntrip Broadcasters do not alter the data. The communication between Sources, a Broadcaster, and its Clients is done through HTTP. Ntrip supports the dissemination of any GNSS data stream (GPS, GLONASS, Galileo, EGNOS, WAAS etc.) that needs 0.2 to 10 Kbit/s transmission rate and carries e.g.</p> <p>RTCM observations or broadcast ephemeris or orbit/clock corrections, DGPS, RTK RTCA corrections, EGNOS &amp; WAAS Raw receiver data, vendor formats RINEX observations BINEX observations other GNSS data/formats Ntrip Broadcasters are currently installed world-wide to disseminate GNSS data in real-time. Visit www.rtcm-ntrip.org for a list of known installations.</p> <p>Ntrip References The following links shall provide some background information on Ntrip usage and further Ntrip development. We try to keep the list up to date. Feel free to inform us about your Ntrip publication in case you would like to see it listed below.</p> <p>Ntrip: Protocol, Video on YouTube,English Ntrip: Client Excercise, Video on YouTube, English Ntrip: Application and Benefit in Modern Surveying Systems, English Nutzung der Internet-Radio-Technologie zur \u00dcbertragung von GNSS-Daten, German Die Zukunft spricht Ntrip, German El proyecto EUREF-IP: Resultados con GPRS, Spanish Techniques GPS-RTK appliqu\u00e9es \u00e0 la trajectographie, French GNSS-Echtzeitorbitkontrolle auf Basis Internet-transferierter ..., German D-GNSS Accuracy Test At Bucu EPN Station, English Networked Transport of RTCM via Internet Protocol, English Ntrip: PP-Presentation, IAG, Sapporo, Japan, 2003, English \u041d\u043e\u0432\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 Ntrip \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438..., Russian Test Results of an Internet RTK System Based on the Ntrip Protocol, English Ntrip - Ein neues Konzept zur \u00dcbertragung von Korrekturdaten unter SAPOS, German Benefits of Telecommunications Technology to GPS Users, English GNSS/GPS infrastructure to support LBS Positioning Systems in Victoria, English NTRIP Estudi i Aplicacions, Catalan Interactive Map of EUREF-IP Real-Time GNSS Data Streams, English Verbesserte GPS-Positionssch\u00e4tzung mit IP-transportierten ..., German</p> <p>Data and Products Real-time observations, ephemeris and corrections can be received from following non-exhaustive list of Ntrip Broadcasters. Corrections are disseminated in the RTCM-State Space Representation (RTCM-SSR) format that has been adopted by the IGS and can be used for real-time PPP.</p> <p>Ntrip Broadcasters dedicated to support IGS and EUREF Broadcaster Operator    Registration    Remarks cddis.nasa.gov  Crustal Dynamics Data Information System (CDDIS), North America CDDIS   IGS observations and products, world-wide gnssdata-ch1.cosmic.ucar.edu    IGS Central Bureau / UCAR COSMIC, North America IGSCB   IGS observations and products, world-wide igs-ip.net  Federal Agency for Cartography and Geodesy (BKG, Europe)    BKG IGS station observations, world-wide products.igs-ip.net Federal Agency for Cartography and Geodesy (BKG, Europe)    BKG IGS products, world-wide auscors.ga.gov.au   Geoscience Australia (GA)   auscors IGS observations and products, world-wide ntrip.gnsslab.cn    Wuhan (China)   Wuhan   IGS observations and products, world-wide 112.65.161.226:2101 Shanghai Astronomical Observatory (China)   SHAO    IGS observations and products, world-wide www.euref-ip.net    Federal Agency for Cartography and Geodesy (BKG, Europe)    BKG EPN observations and products, Europe www.euref-ip.be Royal Observatory of Belgium (ROB), Europe  ROB EPN observations and products, Europe euref-ip.asi.it Agenzia Spaziale Italiana (ASI), Europe ASI EPN observations and products, Europe</p> <p>Observations For the very beginning real-time observations have been made available on IGS and EUREF broadcasters in form of legacy messages for GPS and GLONASS (1004, 1012). Nowadays they have been more and more replaced by the new RTCM3 Multi-Signal Message (MSM) format that was developed to handle all GNSS constellations, signals, and observation types.</p> <p>Broadcast Ephemeris Several Ntrip broadcasters disseminate streams carrying only broadcast ephemeris. They derive their stream contents independently from a globally distributed selection of mainly EUREF and IGS reference stations. Ephemeris message repetition rates vary between 1 and 5 seconds.</p> <p>non-exhaustive list of broadcast ephemeris streams Caster:Port Mountpoint  GNSS    Provider    Sign up products.igs-ip.net:2101    BCEP00BKG0  GPS+GLO+GAL+BDS+QZS BKG Registration wox.geopp.de:2101   WW_EPH  GPS+GLO Geo++   support(at)geopp.de ntrip.gnssonline.eu RTCM3EPH    GPS+GLO Alberding GmbH  info(at)alberding.eu Broadcast Ephemeris messages from globally distributed streams are also converted to RINEX Navigation files. These files are made available for download at https://igs.bkg.bund.de/root_ftp/NTRIP/BRDC/. Unlike daily concatenated files from reference stations, their 24h sliding window content is updated every 15 minutes.</p> <p>Broadcast Orbit and Clock Corrections Precise orbits and clocks can be derived from corrections to Broadcast Ephemeris. RTCM's State Space Representation (SSR) Working Group has developed appropriate v3 messages to disseminate such Broadcast Corrections in real-time. The following messages are defined:</p> <p>Message Contents 1057    GPS orbit corrections to Broadcast Ephemeris 1058    GPS clock corrections to Broadcast Ephemeris 1059    GPS code biases 1060    Combined orbit and clock corrections to GPS Broadcast Ephemeris 1061    GPS User Range Accuracy 1062    High-rate GPS clock corrections to Broadcast Ephemeris 1063    GLONASS orbit corrections to Broadcast Ephemeris 1064    GLONASS clock corrections to Broadcast Ephemeris 1065    GLONASS code biases 1066    Combined orbit and clock corrections to GLONASS Broadcast Ephemeris 1067    GLONASS User Range Accuracy 1068    High-rate GLONASS clock corrections to Broadcast Ephemeristd</p> <p>Orbit corrections are provided in along-track, cross-track and radial components. These components are defined in the earth-centered, earth-fixed reference frame of the broadcast ephemeris. Clock corrections are not adjusted for the 2nd-order relativistic effect. After applying corrections, the satellite position and clock is referred to the 'ionospheric free' phase center of the antenna which is compatible with the broadcast orbit reference. The orbit and clock corrections do neither include local effects (like Ocean Loading or Solid Earth Tides) nor atmospheric effects (ionosphere and/or troposphere). There is currently no RTCM SSR message for ionospheric state parameters. The development of ionospheric messages will be the next step in the schedule of the RTCM State Space Representation Working Group.</p>"},{"location":"software_overview/","title":"Software Overview","text":"<p>Tip</p> <p>While it is not required, we highly recommend that users configure their LG580P GNSS module with the QGNSS software provided by Quectel.</p> Windows Only <p>Currently, the QGNSS software is only available for Windows operating systems.</p> Windows, MacOS, or Linux <p>For users with computers that run on MacOS or Linux, we have found alternative software option for viewing the data from the NMEA messages.</p> <ul> <li> GitHub Repository</li> <li>Installation Instructions</li> <li>PyPI Project</li> </ul>"},{"location":"software_overview/#ch342-usb-driver","title":"CH342 USB Driver","text":"<p>The USB drivers for the CH342 USB-to-Serial converter can be downloaded from the manufacturer's website.</p> <ul> <li> <p> Windows</p> <p> Download Page for <code>CH343SER.EXE</code></p> </li> <li> <p> MacOS</p> <p> Download Page for <code>CH341SER_MAC.ZIP</code></p> </li> </ul> <p>Linux</p> <p>A USB driver is not required for Linux based operating systems.</p>"},{"location":"software_overview/#qgnss-software","title":"QGNSS Software","text":"<p>Windows Only</p> <p>Currently, the QGNSS software is only available for Windows operating systems.</p> <p>QGNSS is highly intuitive GNSS evaluation software that is easy to use, personalized, and compatible with leading Quectel technologies. The software allows users to define or apply GNSS product configurations for specific use cases. Saving, restoring, or sharing configurations between different products and users is easy. The software supports product evaluation with a choice of views to observe static and dynamic behavior of the connected a Quectel GNSS receiver.</p> <p> Download the QGNSS Software (v2.x) from Quectel</p> <p>System Requirements</p> <p>Operating System: Windows</p>"},{"location":"software_overview/#connecting-to-the-lg580p","title":"Connecting to the LG580P","text":"<p>In order to connect to the LG580P properly, users will need to specify the settings of the UART port.</p> <p></p> <p>Click the  button to configure the UART settings.</p> <p>Before users can connect to the Quad-band GNSS RTK breakout board, they will need to specify the connection settings in QGNSS. Once configured, users can select the OK button and QGNSS will automatically attempt to connect to the GNSS module.</p> <ul> <li>Select the <code>LG580P(03)</code> from the drop-down menu to configure the <code>Model</code> of the GNSS module being connected.</li> <li>Below, is a list of the default settings for <code>UART</code> ports of the LG580P. These settings should be selected in the <code>Device Information</code> menu, unless configured differently.</li> <li>For the <code>Port</code>, select the enumeration of the CH342 labeled with channel <code>A</code> from the drop-down menu.</li> </ul> <p></p> <p>Specify the settings for the UART port in QGNSS.</p> <p></p> <p>Select the <code>COM</code> port of the CH342 labeled with <code>A</code>.</p> <p>LG580P - Default Settings</p> <p>The UART ports of the LG580P GNSS module will have the following default configuration:</p> <ul> <li>Baudrate: 460800bps</li> <li>Data Bits: 8</li> <li>Parity: No</li> <li>Stop Bits: 1</li> <li>Flow Control: None</li> </ul>"},{"location":"software_overview/#configure-the-lg580p","title":"Configure the LG580P","text":"<p>By default, the UART ports are configured to transmit and receive <code>NMEA 0183</code> and/or <code>RTCM 3.x</code> messages. These messages are generally used for transmitting PNT data; and providing or receiving RTK corrections, respectively. Quectel also implements a system of proprietary messages (<code>PQTM</code>) for users to configure the LG580P, following the data format of the <code>NMEA</code> protocol.</p> Data Format - PQTM Messages <p>The expected structure of the data in the proprietary PQTM messages is shown below:</p> <p> The data structure of Quectel messages for the <code>NMEA</code> protocol. </p> <p><code>&lt;Checksum&gt;</code>:</p> <ul> <li>Checksum field follows the checksum delimiter character <code>*</code>.</li> <li>Checksum is the 8-bit exclusive OR of all characters in the sentence, including <code>,</code> the field delimiter, between but not including the <code>$</code> and the <code>*</code> delimiters.</li> </ul> <p><code>&lt;CR&gt;</code> &amp; <code>&lt;LF&gt;</code>: Carriage return; followed by a new line</p> <ul> <li>Depending on the terminal emulator, these may be options configured in the program settings.</li> <li>Otherwise, users may need to add the <code>\\r</code> and <code>\\n</code> characters at the end of the message.</li> </ul> <p>In the QGNSS software, users can click on the Advance button, at the bottom of the <code>QConsole</code> window, to configure the settings for the messages sent to the LG580P. Selecting <code>NMEA</code> and <code>CRLF</code> from the drop-down menu of the Checksum Type and Suffix options, will automatically calculate and append the <code>&lt;checksum&gt;</code> value, carriage return, and line follow to the end of the message entered in the Data Input field.</p> <p></p> <p>The settings for the messages transmitted from the QConsole.</p> Display the QConsole Toolbar <p>There is a toolbar for the QConsole, which has a bunch of tools that users may find useful. This includes, a search function, scroll-lock button, pause/clear the message feed, etc. To open/close the toolbar inside the QConsole, right-click on the mouse and select the <code>Show Tool</code> option from the drop-down menu or utilize the keyboard shortcut: Ctrl + Q.</p> <p> Right-click on the mouse and select the <code>Show Tool</code> option, inside the QConsole. </p> Example - <code>PQTMCFGUART</code> Message <p>As an example, try utilizing the <code>PQTMCFGUART</code> PQTM message. Enter <code>$PQTMCFGUART,R*</code> into the Data Input field of the QConsole. DOn't forget to select the <code>NMEA</code> and <code>CRLF</code> options from Advance settings menu. If entered and configured properly, the value <code>36</code> should pop up in the Checksum field of the QConsole; then, click on the  button to send the message.</p> <pre><code>$PQTMCFGUART,R*\n</code></pre> <p>Once the message has been sent, keep a close watch of the messages in the console. It may help to click on the  button to disable auto-scrolling, when trying to locate the message response. Additionally, the response may not appear right away, it could be appended to the end of the next data packet, as shown in the image below.</p> <p> Example of utilizing the Quectel PQTM messages in the QConsole. </p>"},{"location":"software_overview/#firmware-update","title":"Firmware Update","text":"<p>In the event that users need to update the firmware on the LG580P module, please refer to the instructions in Quectel's reference manual. For the latest firmware, users should reach out to Quectel through their forum page.</p> <p>Firmware Upgrade Manual</p> <p>Synchronization Step</p> <p>In the reference manual, Step 9 instructs users to wait for a synchronization process. If users refer to an earlier section of the manual, this process requires the LG580P module to receive a <code>SYNC_WORD1</code> within 500ms of powering up. Therefore, users must restart the module during the synchronization step. In the QGNSS software (+v2.1), this can be performed with the  reboot button.</p> <p> Reboot button in the QGNSS software (v2.1). </p> <p>Example - Step-by-Step Instructions</p> <ol> <li>Connect to the LG580P</li> <li> <p>From the Tools drop down menu, select Firmware Update</p> <p>Tools &gt; Firmware Update</p> </li> <li> <p>Click the  button to select the receiver firmware</p> </li> <li>Click to choose the firmware upgrade package whose name is identifiable by the presence of <code>*.pkg</code> file extension</li> <li> <p>Click on the  button to reset module</p> Previous Versions <p>For previous versions of the QGNSS software, prior to initializing the firmware upgrade process, users can send the <code>PQTMSRR</code> PQTM message to perform a system reset and reboot the GNSS receiver. We recommend having everything pre-configured to upgrade the firmware as the module usually initializes within 5s of sending the <code>PQTMSRR</code> message.</p> </li> <li> <p>Click to start the firmware upgrade process and wait for the process to complete</p> </li> <li>Click to start the firmware upgrade process and wait for synchronization between the module and the PC</li> <li>Manually reset the module within 90 seconds; otherwise, the firmware upgrade will fail. In this case, you can retry the previous step</li> <li>Wait for upgrading to complete</li> <li>Firmware upgrade is successful. After the upgrade is complete, the module will automatically restart</li> </ol>"},{"location":"software_overview/#pygpsclient","title":"PyGPSClient","text":"<p>As an alternative to QGNSS, we recommend PyGPSClient for users with computers that run on MacOS or Linux.</p> Resources <p>For additional information, users can refer to the following resources for the PyGPSClient software:</p> <ul> <li> GitHub Repository</li> <li>Installation Instructions</li> <li>LG580P Configuration</li> <li>PyPI Project</li> </ul>"},{"location":"software_overview/#installation","title":"Installation","text":"<p>There are a variety of installation methods detailed in the GitHub repository's <code>README.md</code> file. However, we recommend utilizing the <code>pip</code> installation method.</p> <p>Installation Commands</p> <p>Depending on how Python is installed on the computer, one of the following commands should allow users to install the software.</p> <ul> <li> <pre><code>python3 -m pip install pygpsclient\n</code></pre> </li> <li> <pre><code>pip install pygpsclient\n</code></pre> </li> </ul> System Requirements <p>This installation method requires an internet connection. Additionally, users will also need administrative privileges (or root access <code>sudo</code>) for the installation.</p>"},{"location":"software_overview/#connecting-to-the-lg580p_1","title":"Connecting to the LG580P","text":"<p>Before users can connect to the Quad-band GNSS RTK breakout board, they will need to specify the settings of the UART port in PyGPSClient. Once configured, users can select the  button and PyGPSClient will automatically attempt to connect to the GNSS module.</p> <ul> <li>For the <code>Serial Port</code>, select the port with the lowest enumeration of the CH342 or the port labeled with channel <code>A</code> from the drop-down menu.</li> </ul> <p></p> <p>Specify the settings for the UART port in QGNSS.</p>"},{"location":"software_overview/#terminal-emulator","title":"Terminal Emulator","text":"<p>Another viable option for connecting to the Quad-band GNSS RTK breakout board, is to utilize a terminal emulation program. While reading the data sent from the LG580P is relatively trivial, users will need to be more selective when choosing an emulator to configure the LG580P module on the Quad-band GNSS RTK breakout board. This is due to the unique data structure of the proprietary messages that Quectel implements to configure the LG580P (see the Configure the LG580P section, above).</p>"},{"location":"software_overview/#arduino-ide","title":"Arduino IDE","text":"<p>Tip</p> <p>For first-time users, who have never programmed before and are looking to use the Arduino IDE, we recommend beginning with the SparkFun Inventor's Kit (SIK), which is designed to help users get started programming with the Arduino IDE.</p> <p>Most users may already be familiar with the Arduino IDE and its use. However, for those of you who have never heard the name Arduino before, feel free to check out the Arduino website. To get started with using the Arduino IDE, check out our tutorials below:</p> <ul> <li> <p> <p>What is an Arduino?</p> <li> <p> <p>Installing the Arduino IDE</p> <li> <p> <p>Installing an Arduino Library</p> <li> <p> <p>Installing Board Definitions in the Arduino IDE</p>"},{"location":"software_overview/#sparkfun-lg290p-gnss-arduino-library","title":"SparkFun LG290P GNSS Arduino Library","text":"<p>The SparkFun LG290P Quadband RTK GNSS Arduino Library can be installed from the library manager in the Arduino IDE by searching for:</p> <pre><code>SparkFun LG290P Quadband RTK GNSS Arduino Library\n</code></pre> <p></p> <p>The SparkFun LG290P Quadband RTK GNSS Arduino Library in the library manager of the Arduino IDE.</p> <p>Manually Download the Arduino Library</p> <p>For users who would like to manually download and install the library, the <code>*.zip</code> file can be accessed from the GitHub repository or downloaded by clicking the button below.</p> <p>  Download the Arduino Library </p>"},{"location":"troubleshooting_tips/","title":"Troubleshooting Tips","text":"<p>Need Help?</p> <p>If you need technical assistance or more information on a product that is not working as you expected, we recommend heading over to the SparkFun Technical Assistance page for some initial troubleshooting.</p> <p> SparkFun Technical Assistance Page </p> <p>If you can't find what you need there, the SparkFun GNSS Forum is a great place to ask questions.</p> <p>Account Registration Required</p> <p>If this is your first visit to our forum, you'll need to create a Forum Account to post questions.</p> <p></p>"},{"location":"github/contribute/","title":"Contribute","text":""},{"location":"github/contribute/#make-an-augmentation","title":"Make an Augmentation!","text":"<p>Spot an improvement opportunity? Feel free to contribute to our open-source design and documentation. </p>"},{"location":"github/contribute/#improve-our-documentation","title":"Improve our Documentation","text":"<p>All of this documentation can be modified by you! Please help us make it better.</p> <ul> <li>These pages are contained in the <code>docs</code> folder of the SparkFun GNSS LG580P repository.</li> </ul>"},{"location":"github/contribute/#submit-a-correction","title":"Submit a Correction","text":"<ol> <li>With a GitHub account, fork this repository.</li> <li>Add your corrections or improvements to the markdown file.</li> <li>File a pull request with your changes, and enjoy making the words worlds world a better place.<ul> <li>Once received, the documentation specialist will automatically be notified.</li> <li>We will review your suggested improvements to make sure they are correct and fit within our documentation standards.</li> </ul> </li> </ol>"},{"location":"github/contribute/#improve-our-hardware-design","title":"Improve our Hardware Design","text":"<p>All of our designs are open-source! Please help us make it better.</p> <ul> <li>Our board design files are contained in the <code>/Hardware</code> directories of the SparkFun GNSS LG580P repository.</li> </ul>"},{"location":"github/contribute/#submit-a-design-enhancement","title":"Submit a Design Enhancement","text":"<ol> <li>With a GitHub account, fork this repository.</li> <li>Add your design augmentation(s)</li> <li>File a pull request with your changes, and enjoy making the words worlds world a better place.<ol> <li>Once received, the engineer in charge of the original design will automatically be notified.</li> <li>We will review your suggested improvement(s) to verify that they are within our board design standards and meet our product design requirements.</li> <li> <p>If approved, we will flag these changes for our next board revision. Congrats! \ud83c\udf7b</p> <p>Info</p> <p>Even if your suggestion is accepted, these changes may not be immediately available for purchase. We may have to cycle through our current product inventory first.</p> </li> </ol> </li> </ol>"},{"location":"github/contribute/#contributors","title":"Contributors","text":"<p>Let's provide some recognition to the contributors for this project!</p> <p> </p>"},{"location":"github/file_issue/","title":"Submit Issues","text":""},{"location":"github/file_issue/#need-assistance","title":"Need Assistance?","text":"<p>Need Help?</p> <p>If you need technical assistance or more information on a product that is not working as you expected, we recommend heading on over to the SparkFun Technical Assistance page for some initial troubleshooting. This Submit Issues page is not where users should seek assistance.</p> <p> SparkFun Technical Assistance Page </p> <p>If you can't find what you need there, the SparkFun Forums is a great place to search the product forums and ask questions.</p> <p>Account Registration Required</p> <p>For your first visit to our forum, you'll need to create a Forum Account to post questions.</p>"},{"location":"github/file_issue/#did-we-make-a-mistake","title":"Did we make a mistake?","text":"<p>Spot something wrong? Please let us know. </p>"},{"location":"github/file_issue/#discrepancies-in-the-documentation","title":"Discrepancies in the Documentation","text":"<p>All of our documentation can be modified by you! Please help us make it better.</p> <ul> <li>The documentation files for these pages are contained in the <code>docs</code> folder of the SparkFun GNSS LG580P repository.</li> </ul>"},{"location":"github/file_issue/#spot-something-wrong","title":"\ud83d\udd0d Spot something wrong?","text":"<p>If a section of the documentation is incorrect, please open an issue and let us know.</p>"},{"location":"github/file_issue/#do-you-have-a-suggested-correction","title":"Do you have a suggested correction?","text":"<ol> <li>With a GitHub account, fork this repository.</li> <li>Add your correction(s) or improvement(s) to the markdown file(s)</li> <li>File a pull request with your changes, and enjoy making the words worlds world a better place.<ul> <li>Once received, the documentation specialist will automatically be notified.</li> <li>We will review your suggested improvement(s) to make sure they are correct and fit within our documentation standards.</li> </ul> </li> </ol>"},{"location":"github/file_issue/#problems-in-the-hardware-design","title":"Problems in the Hardware Design","text":"<p>All of our designs are open-source! Please help us make it better.</p> <ul> <li>Our board design files are contained in the <code>/Hardware</code> directories of the SparkFun GNSS LG580P repository.</li> </ul>"},{"location":"github/file_issue/#does-something-not-make-sense","title":"Does something not make sense? \ud83e\udd14","text":"<p>If part of the design is confusing, please open an issue and let us know.</p>"},{"location":"github/file_issue/#did-we-forget-to-include-an-important-function-of-the-board","title":"Did we forget to include an important function of the board? \ud83e\udd26","text":"<p>If part of the board's functionality is missing, please open an issue and file a feature request.</p> <p>Design Considerations</p> <p>Please keep in mind that we may intentionally exclude certain functions of the board to meet our product design requirements.</p> <ul> <li>For example, our Qwiic Micro boards are intended to fit on a small board layout and only use I<sup>2</sup>C communication; therefore, we may not have the SPI and interrupt pins available for users.</li> </ul>"},{"location":"github/file_issue/#do-you-wish-to-contribute-directly-to-improving-the-board-design","title":"Do you wish to contribute directly to improving the board design?","text":"<ol> <li>With a GitHub account, fork this repository.</li> <li>Add your design augmentation(s)</li> <li>File a pull request with your changes, and enjoy making the words worlds world a better place.<ol> <li>Once received, the engineer in charge of the original design will automatically be notified.</li> <li>We will review your suggested improvement(s) to verify that they are within our board design standards and meet our product design requirements.</li> <li> <p>If approved, we will flag these changes for our next board revision. Congrats! \ud83c\udf7b</p> <p>Info</p> <p>Even if your suggestion is accepted, these changes may not be immediately available for purchase. We may have to cycle through our current product inventory first.</p> </li> </ol> </li> </ol>"}]}